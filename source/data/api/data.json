{
    "project": {
        "name": "jBootstrap",
        "description": "The javascript version of Twitter Bootstrap",
        "version": "1.0"
    },
    "files": {
        "source/javascripts/jB/jB/accordion/item/Body.js": {
            "name": "source/javascripts/jB/jB/accordion/item/Body.js",
            "modules": {},
            "classes": {
                "jB.accordion.item.Body": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/accordion/Item.js": {
            "name": "source/javascripts/jB/jB/accordion/Item.js",
            "modules": {},
            "classes": {
                "jB.accordion.Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/button/Group.js": {
            "name": "source/javascripts/jB/jB/button/Group.js",
            "modules": {},
            "classes": {
                "jB.button.Group": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/button/Menu.js": {
            "name": "source/javascripts/jB/jB/button/Menu.js",
            "modules": {},
            "classes": {
                "jB.button.Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/button/SplitMenu.js": {
            "name": "source/javascripts/jB/jB/button/SplitMenu.js",
            "modules": {},
            "classes": {
                "jB.button.SplitMenu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/select/OptGroup.js": {
            "name": "source/javascripts/jB/jB/form/field/select/OptGroup.js",
            "modules": {},
            "classes": {
                "jB.form.field.select.OptGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/select/Option.js": {
            "name": "source/javascripts/jB/jB/form/field/select/Option.js",
            "modules": {},
            "classes": {
                "jB.form.field.select.Option": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/AbstractField.js": {
            "name": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "modules": {},
            "classes": {
                "jB.form.field.AbstractField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/Checkbox.js": {
            "name": "source/javascripts/jB/jB/form/field/Checkbox.js",
            "modules": {},
            "classes": {
                "jB.form.field.Checkbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/Password.js": {
            "name": "source/javascripts/jB/jB/form/field/Password.js",
            "modules": {},
            "classes": {
                "jB.form.field.Password": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/Radio.js": {
            "name": "source/javascripts/jB/jB/form/field/Radio.js",
            "modules": {},
            "classes": {
                "jB.form.field.Radio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/Select.js": {
            "name": "source/javascripts/jB/jB/form/field/Select.js",
            "modules": {},
            "classes": {
                "jB.form.field.Select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/Text.js": {
            "name": "source/javascripts/jB/jB/form/field/Text.js",
            "modules": {},
            "classes": {
                "jB.form.field.Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/TextArea.js": {
            "name": "source/javascripts/jB/jB/form/field/TextArea.js",
            "modules": {},
            "classes": {
                "jB.form.field.TextArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/field/Uneditable.js": {
            "name": "source/javascripts/jB/jB/form/field/Uneditable.js",
            "modules": {},
            "classes": {
                "jB.form.field.Uneditable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/AddOn.js": {
            "name": "source/javascripts/jB/jB/form/AddOn.js",
            "modules": {},
            "classes": {
                "jB.form.AddOn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/ControlGroup.js": {
            "name": "source/javascripts/jB/jB/form/ControlGroup.js",
            "modules": {},
            "classes": {
                "jB.form.ControlGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/Controls.js": {
            "name": "source/javascripts/jB/jB/form/Controls.js",
            "modules": {},
            "classes": {
                "jB.form.Controls": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/FieldContainer.js": {
            "name": "source/javascripts/jB/jB/form/FieldContainer.js",
            "modules": {},
            "classes": {
                "jB.form.FieldContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/FieldSet.js": {
            "name": "source/javascripts/jB/jB/form/FieldSet.js",
            "modules": {},
            "classes": {
                "jB.form.FieldSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/HelpText.js": {
            "name": "source/javascripts/jB/jB/form/HelpText.js",
            "modules": {},
            "classes": {
                "jB.form.HelpText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/form/Label.js": {
            "name": "source/javascripts/jB/jB/form/Label.js",
            "modules": {},
            "classes": {
                "jB.form.Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/menu/AbstractItem.js": {
            "name": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "modules": {},
            "classes": {
                "jB.menu.AbstractItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/menu/CheckItem.js": {
            "name": "source/javascripts/jB/jB/menu/CheckItem.js",
            "modules": {},
            "classes": {
                "jB.menu.CheckItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/menu/Divider.js": {
            "name": "source/javascripts/jB/jB/menu/Divider.js",
            "modules": {},
            "classes": {
                "jB.menu.Divider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/menu/Item.js": {
            "name": "source/javascripts/jB/jB/menu/Item.js",
            "modules": {},
            "classes": {
                "jB.menu.Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/nav/Item.js": {
            "name": "source/javascripts/jB/jB/nav/Item.js",
            "modules": {},
            "classes": {
                "jB.nav.Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/navbar/nav/Item.js": {
            "name": "source/javascripts/jB/jB/navbar/nav/Item.js",
            "modules": {},
            "classes": {
                "jB.navbar.nav.Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/navbar/Container.js": {
            "name": "source/javascripts/jB/jB/navbar/Container.js",
            "modules": {},
            "classes": {
                "jB.navbar.Container": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/navbar/Divider.js": {
            "name": "source/javascripts/jB/jB/navbar/Divider.js",
            "modules": {},
            "classes": {
                "jB.navbar.Divider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/navbar/Nav.js": {
            "name": "source/javascripts/jB/jB/navbar/Nav.js",
            "modules": {},
            "classes": {
                "jB.navbar.Nav": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/tab/Content.js": {
            "name": "source/javascripts/jB/jB/tab/Content.js",
            "modules": {},
            "classes": {
                "jB.tab.Content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/tab/Item.js": {
            "name": "source/javascripts/jB/jB/tab/Item.js",
            "modules": {},
            "classes": {
                "jB.tab.Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/ux/Affix.js": {
            "name": "source/javascripts/jB/jB/ux/Affix.js",
            "modules": {},
            "classes": {
                "jB.ux.Affix": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/AbstractPanel.js": {
            "name": "source/javascripts/jB/jB/AbstractPanel.js",
            "modules": {},
            "classes": {
                "jB.AbstractPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Accordion.js": {
            "name": "source/javascripts/jB/jB/Accordion.js",
            "modules": {},
            "classes": {
                "jB.Accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Alert.js": {
            "name": "source/javascripts/jB/jB/Alert.js",
            "modules": {},
            "classes": {
                "jB.Alert": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Button.js": {
            "name": "source/javascripts/jB/jB/Button.js",
            "modules": {},
            "classes": {
                "jB.Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Collapse.js": {
            "name": "source/javascripts/jB/jB/Collapse.js",
            "modules": {},
            "classes": {
                "jB.Collapse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Component.js": {
            "name": "source/javascripts/jB/jB/Component.js",
            "modules": {},
            "classes": {
                "jB.Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/ComponentCollection.js": {
            "name": "source/javascripts/jB/jB/ComponentCollection.js",
            "modules": {},
            "classes": {
                "jB.ComponentCollection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Form.js": {
            "name": "source/javascripts/jB/jB/Form.js",
            "modules": {},
            "classes": {
                "jB.Form": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Icon.js": {
            "name": "source/javascripts/jB/jB/Icon.js",
            "modules": {},
            "classes": {
                "jB.Icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Menu.js": {
            "name": "source/javascripts/jB/jB/Menu.js",
            "modules": {},
            "classes": {
                "jB.Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Modal.js": {
            "name": "source/javascripts/jB/jB/Modal.js",
            "modules": {},
            "classes": {
                "jB.Modal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Nav.js": {
            "name": "source/javascripts/jB/jB/Nav.js",
            "modules": {},
            "classes": {
                "jB.Nav": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Navbar.js": {
            "name": "source/javascripts/jB/jB/Navbar.js",
            "modules": {},
            "classes": {
                "jB.Navbar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Popover.js": {
            "name": "source/javascripts/jB/jB/Popover.js",
            "modules": {},
            "classes": {
                "jB.Popover": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Progress.js": {
            "name": "source/javascripts/jB/jB/Progress.js",
            "modules": {},
            "classes": {
                "jB.Progress": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Tab.js": {
            "name": "source/javascripts/jB/jB/Tab.js",
            "modules": {},
            "classes": {
                "jB.Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Tooltip.js": {
            "name": "source/javascripts/jB/jB/Tooltip.js",
            "modules": {},
            "classes": {
                "jB.Tooltip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB/Tree.js": {
            "name": "source/javascripts/jB/jB/Tree.js",
            "modules": {},
            "classes": {
                "jB.Tree": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/javascripts/jB/jB.js": {
            "name": "source/javascripts/jB/jB.js",
            "modules": {},
            "classes": {
                "jB.jB": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "jB.accordion.item.Body": {
            "name": "jB.accordion.item.Body",
            "shortname": "jB.accordion.item.Body",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/accordion/item/Body.js",
            "line": 3,
            "alias": "accordion.item.body",
            "extends": "jB.Collapse"
        },
        "jB.accordion.Item": {
            "name": "jB.accordion.Item",
            "shortname": "jB.accordion.Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 3,
            "alias": "accordion.item",
            "extends": "jB.Component"
        },
        "jB.button.Group": {
            "name": "jB.button.Group",
            "shortname": "jB.button.Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 3,
            "example": [
                "\njB.button.Group({\n    items: [\n        {\n            text: 'Btn 1'\n        },{\n            text: 'Btn 2'\n        },{\n            text: 'Btn 3'\n        }\n    ]\n//    ,vertical: true\n//    ,togglable: 'radio' // radio|checkbox\n//    ,block: true\n//    ,icon: 'heart'\n//    ,iconAlign: 'right'\n//    ,pressed: true\n//    ,size: 'large'\n//    ,text: 'btn text'\n//    ,type: 'primary'\n})"
            ],
            "alias": "button.group",
            "extends": "jB.Component"
        },
        "jB.button.Menu": {
            "name": "jB.button.Menu",
            "shortname": "jB.button.Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 3,
            "example": [
                "\njB.button.Menu({\n    button: 'Action'\n    ,menu: [\n        {\n            text: 'Item 1'\n            ,href: 'http://google.com'\n        },{\n            text: 'Item 2'\n        },'-',{\n            text: 'Item 3'\n        }\n    ]\n    ,css: {\n        margin: '100px 0 0 100px'\n    }\n\n//    ,button: {\n//        text: 'Action'\n//        ,icon: 'heart'\n//        ,type: 'primary'\n//    }\n//    ,dropUp: true\n//    ,menuAlign: 'right'\n})"
            ],
            "alias": "button.menu",
            "extends": "jB.button.Group"
        },
        "jB.button.SplitMenu": {
            "name": "jB.button.SplitMenu",
            "shortname": "jB.button.SplitMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/button/SplitMenu.js",
            "line": 3,
            "example": [
                "\njB.button.SplitMenu({\n    text: 'Action'\n    ,menu: [\n        {\n            text: 'Item 1'\n            ,href: 'http://google.com'\n        },{\n            text: 'Item 2'\n        },'-',{\n            text: 'Item 3'\n        }\n    ]\n    ,css: {\n        margin: '100px 0 0 100px'\n    }\n\n//    ,dropUp: true\n//    ,menuAlign: 'right'\n})"
            ],
            "alias": "button.splitmenu",
            "extends": "jB.button.Menu"
        },
        "jB.form.field.select.OptGroup": {
            "name": "jB.form.field.select.OptGroup",
            "shortname": "jB.form.field.select.OptGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/select/OptGroup.js",
            "line": 3,
            "alias": "select.optgroup",
            "extends": "jB.Component"
        },
        "jB.form.field.select.Option": {
            "name": "jB.form.field.select.Option",
            "shortname": "jB.form.field.select.Option",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/select/Option.js",
            "line": 3,
            "alias": "select.option",
            "extends": "jB.Component"
        },
        "jB.form.field.AbstractField": {
            "name": "jB.form.field.AbstractField",
            "shortname": "jB.form.field.AbstractField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 3,
            "extends": "jB.Component"
        },
        "jB.form.field.Checkbox": {
            "name": "jB.form.field.Checkbox",
            "shortname": "jB.form.field.Checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/Checkbox.js",
            "line": 3,
            "alias": "checkbox",
            "extends": "jB.form.field.AbstractField",
            "example": [
                "\njB.form.field.Checkbox({\n    checked: true\n})"
            ]
        },
        "jB.form.field.Password": {
            "name": "jB.form.field.Password",
            "shortname": "jB.form.field.Password",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/Password.js",
            "line": 3,
            "alias": "passwordfield",
            "extends": "jB.form.field.Text"
        },
        "jB.form.field.Radio": {
            "name": "jB.form.field.Radio",
            "shortname": "jB.form.field.Radio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/Radio.js",
            "line": 3,
            "alias": "radio",
            "extends": "jB.form.field.Checkbox"
        },
        "jB.form.field.Select": {
            "name": "jB.form.field.Select",
            "shortname": "jB.form.field.Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/Select.js",
            "line": 3,
            "alias": "select",
            "extends": "jB.form.field.AbstractField",
            "example": [
                "\njB.form.field.Select([1, 2, 3, 4])",
                "\njB.form.field.Select([\n    [1, 'item 1'],\n    [2, 'item 2'],\n    [3, 'item 3'],\n    [4, 'item 4']\n])",
                "\njB.form.field.Select({\n    items: {\n        1: 'item 1'\n        ,2: 'item 2'\n        ,3: 'item 3'\n        ,4: 'item 4'\n    }\n    ,multiple: true\n})",
                "\njB.form.field.Select({\n    items: {\n        'Group 1': [1, 2, 3]\n        ,'Group 2': [3, 4, 5]\n        ,3: 'item 3'\n        ,'Group 4': [6, 7, 8]\n    }\n})",
                "\njB.form.field.Select([\n    {\n        text: 'Group 1'\n        ,val: [1, 2, 3]\n    },{\n        text: 'Group 2'\n        ,val: [4, 5, 6]\n    }\n])"
            ]
        },
        "jB.form.field.Text": {
            "name": "jB.form.field.Text",
            "shortname": "jB.form.field.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/Text.js",
            "line": 3,
            "alias": "textfield",
            "extends": "jB.form.field.AbstractField",
            "example": [
                "\njB.form.field.Text({\n    name: 'search'\n    ,placeHolder: 'Search...'\n    ,search: true\n})"
            ]
        },
        "jB.form.field.TextArea": {
            "name": "jB.form.field.TextArea",
            "shortname": "jB.form.field.TextArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/TextArea.js",
            "line": 3,
            "alias": "textarea",
            "extends": "jB.form.field.AbstractField",
            "example": [
                "\njB.form.field.TextArea({\n    name: 'description'\n    ,placeHolder: 'Type something...'\n})"
            ]
        },
        "jB.form.field.Uneditable": {
            "name": "jB.form.field.Uneditable",
            "shortname": "jB.form.field.Uneditable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/field/Uneditable.js",
            "line": 3,
            "alias": "uneditablefield",
            "extends": "jB.form.field.AbstractField",
            "example": [
                "\njB.form.field.Uneditable({\n    val: 'Some value here'\n})"
            ]
        },
        "jB.form.AddOn": {
            "name": "jB.form.AddOn",
            "shortname": "jB.form.AddOn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/AddOn.js",
            "line": 3,
            "alias": "form.addon",
            "extends": "jB.Component"
        },
        "jB.form.ControlGroup": {
            "name": "jB.form.ControlGroup",
            "shortname": "jB.form.ControlGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 3,
            "alias": "form.controlgroup",
            "extends": "jB.Component",
            "example": [
                "\njB.form.ControlGroup({\n    label: 'Email'\n    ,controls: [{\n        xtype: 'textfield'\n        ,placeHolder: 'email'\n    }]\n})"
            ]
        },
        "jB.form.Controls": {
            "name": "jB.form.Controls",
            "shortname": "jB.form.Controls",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/Controls.js",
            "line": 3,
            "alias": "form.controls",
            "extends": "jB.Component"
        },
        "jB.form.FieldContainer": {
            "name": "jB.form.FieldContainer",
            "shortname": "jB.form.FieldContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/FieldContainer.js",
            "line": 3,
            "alias": "form.fieldcontainer",
            "extends": "jB.Component",
            "example": [
                "\njB.form.FieldContainer({\n    addOnAppend: true\n    ,items: [\n        {\n            xtype: 'textfield'\n        },{\n            xtype: 'form.addon'\n            ,text: '.00'\n        }\n    ]\n})",
                "\njB.form.FieldContainer({\n    addOnPrepend: true\n    ,items: [\n        {\n            xtype: 'form.addon'\n            ,text: '@'\n        },{\n            xtype: 'textfield'\n            ,placeHolder: 'Email'\n        }\n    ]\n})",
                "\njB.form.FieldContainer({\n    addOnAppend: true\n    ,addOnPrepend: true\n    ,items: [\n        {\n            xtype: 'form.addon'\n            ,text: '$'\n        },{\n            xtype: 'textfield'\n        },{\n            xtype: 'form.addon'\n            ,text: '.00'\n        }\n    ]\n})",
                "\njB.form.FieldContainer({\n    addOnAppend: true\n    ,items: [\n        {\n            xtype: 'textfield'\n        },{\n            xtype: 'button'\n            ,text: 'Go!'\n        }\n    ]\n})",
                "\njB.form.FieldContainer({\n    addOnAppend: true\n    ,items: [\n        {\n            xtype: 'textfield'\n        },{\n            xtype: 'button'\n            ,text: 'Search'\n        },{\n            xtype: 'button'\n            ,text: 'Options'\n        }\n    ]\n})",
                "\njB.form.FieldContainer({\n    addOnAppend: true\n    ,items: [\n        {\n            xtype: 'textfield'\n        },{\n            xtype: 'button.menu'\n            ,text: 'Action'\n            ,menu: [\n                {\n                    text: 'Action'\n                },{\n                    text: 'Another action'\n                }\n            ]\n        }\n    ]\n})",
                "\njB.form.FieldContainer({\n    addOnAppend: true\n    ,items: [\n        {\n            xtype: 'textfield'\n        },{\n            xtype: 'button.splitmenu'\n            ,text: 'Action'\n            ,menu: [\n                {\n                    text: 'Action'\n                },{\n                    text: 'Another action'\n                }\n            ]\n        }\n    ]\n})",
                "\njB.Form({\n    layout: 'search'\n    ,items: {\n        xtype: 'form.fieldcontainer'\n        ,addOnAppend: true\n        ,items: [\n            {\n                xtype: 'textfield'\n            },{\n                xtype: 'button'\n                ,text: 'Search'\n            }\n        ]\n    }\n})"
            ]
        },
        "jB.form.FieldSet": {
            "name": "jB.form.FieldSet",
            "shortname": "jB.form.FieldSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/FieldSet.js",
            "line": 3,
            "alias": "fieldset",
            "extends": "jB.AbstractPanel",
            "example": [
                "\njB.form.FieldSet({\n    legend: 'Legend'\n    ,body: [\n        {\n            xtype: 'textfield'\n            ,placeHolder: 'Email'\n        },{\n            xtype: 'passwordfield'\n            ,placeHolder: 'Password'\n        }\n    ]\n})"
            ]
        },
        "jB.form.HelpText": {
            "name": "jB.form.HelpText",
            "shortname": "jB.form.HelpText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/HelpText.js",
            "line": 3,
            "alias": "helptext",
            "extends": "jB.Component"
        },
        "jB.form.Label": {
            "name": "jB.form.Label",
            "shortname": "jB.form.Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 3,
            "alias": "label",
            "extends": "jB.Component",
            "example": [
                "\njB.form.Label({\n    text: 'Email'\n    ,field: {\n        xtype: 'checkbox'\n    }\n})"
            ]
        },
        "jB.menu.AbstractItem": {
            "name": "jB.menu.AbstractItem",
            "shortname": "jB.menu.AbstractItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 3,
            "extends": "jB.Component"
        },
        "jB.menu.CheckItem": {
            "name": "jB.menu.CheckItem",
            "shortname": "jB.menu.CheckItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 3,
            "alias": "menu.checkitem",
            "extends": "jB.menu.Item",
            "example": [
                "\njB.Menu({\n    defaults: {\n        on: {\n            checkchange: function(e, checked, checkValue) {\n                alert('checked: ' + checked + ', check value:' + checkValue)\n            }\n        }\n    }\n    ,items: [\n        {\n            xtype: 'menu.checkitem'\n            ,text: 'Check Item 1'\n            ,checked: true\n            ,checkValue: 1\n        },{\n            xtype: 'menu.checkitem'\n            ,text: 'Check Item 2'\n            ,checkValue: 2\n        }\n    ]\n    ,css: {\n        display: 'block'\n        ,position: 'static'\n    }\n})\n"
            ]
        },
        "jB.menu.Divider": {
            "name": "jB.menu.Divider",
            "shortname": "jB.menu.Divider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/menu/Divider.js",
            "line": 4,
            "alias": "menu.divider",
            "extends": "jB.Component"
        },
        "jB.menu.Item": {
            "name": "jB.menu.Item",
            "shortname": "jB.menu.Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/menu/Item.js",
            "line": 3,
            "alias": "menu.item",
            "extends": "jB.Component"
        },
        "jB.nav.Item": {
            "name": "jB.nav.Item",
            "shortname": "jB.nav.Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/nav/Item.js",
            "line": 4,
            "alias": "nav.item",
            "extends": "jB.menu.Item"
        },
        "jB.navbar.nav.Item": {
            "name": "jB.navbar.nav.Item",
            "shortname": "jB.navbar.nav.Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/navbar/nav/Item.js",
            "line": 3,
            "alias": "navbar.nav.item",
            "extends": "jB.menu.Item"
        },
        "jB.navbar.Container": {
            "name": "jB.navbar.Container",
            "shortname": "jB.navbar.Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/navbar/Container.js",
            "line": 3,
            "alias": "navbar.container",
            "extends": "jB.AbstractPanel"
        },
        "jB.navbar.Divider": {
            "name": "jB.navbar.Divider",
            "shortname": "jB.navbar.Divider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/navbar/Divider.js",
            "line": 1,
            "alias": "navbar.divider",
            "extends": "jB.Component"
        },
        "jB.navbar.Nav": {
            "name": "jB.navbar.Nav",
            "shortname": "jB.navbar.Nav",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/navbar/Nav.js",
            "line": 1,
            "alias": "navbar.nav",
            "extends": "jB.Menu"
        },
        "jB.tab.Content": {
            "name": "jB.tab.Content",
            "shortname": "jB.tab.Content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/tab/Content.js",
            "line": 2,
            "alias": "tab.content",
            "extends": "jB.Component"
        },
        "jB.tab.Item": {
            "name": "jB.tab.Item",
            "shortname": "jB.tab.Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/tab/Item.js",
            "line": 7,
            "is_constructor": 1,
            "params": [
                {
                    "name": "tab",
                    "description": "",
                    "type": "jB.Tab"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "jB.ux.Affix": {
            "name": "jB.ux.Affix",
            "shortname": "jB.ux.Affix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/ux/Affix.js",
            "line": 1
        },
        "jB.AbstractPanel": {
            "name": "jB.AbstractPanel",
            "shortname": "jB.AbstractPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 3,
            "extends": "jB.Component"
        },
        "jB.Accordion": {
            "name": "jB.Accordion",
            "shortname": "jB.Accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Accordion.js",
            "line": 4,
            "example": [
                "\njB.Accordion({\n    items: [\n        {\n            title: 'Item 1'\n            ,body: 'Item 1 body'\n        },{\n            title: 'Item 2'\n            ,body: 'Item 2 body'\n        },{\n            title: 'Item 3'\n            ,body: 'Item 3 body'\n        }\n    ]\n})"
            ],
            "alias": "accordion",
            "extends": "jB.Component"
        },
        "jB.Alert": {
            "name": "jB.Alert",
            "shortname": "jB.Alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 18,
            "example": [
                "\njB.Alert({\n    body: '<b>Holy guacamole!</b> Best check yo self, you\\'re not looking too good.'\n    //,animation: 'fade'     // fade, slide, true, false\n    //,block: true           // true ,false\n    ,closable: true        // true, false\n    //,closeAction: 'remove' // hide, remove\n    //,title: 'Alert title'\n    //,type: 'error'         // info, success, warning, error, danger\n    ,on: {\n        close: function() {\n            alert('close!')\n        }\n        ,closed: function() {\n            alert('closed!')\n        }\n    }\n})"
            ],
            "alias": "alert",
            "extends": "jB.Component"
        },
        "jB.Button": {
            "name": "jB.Button",
            "shortname": "jB.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 3,
            "example": [
                "\njB.Button({\n    text: 'Button',\n    //type: 'primary',    // primary|info|success|warning|danger|inverse|link\n    //size: 'large',      // mini|small|large\n    //disabled: true,     // true|false\n    //pressed: true,      // true|false\n    //togglable: true,    // true|false\n    //block: true,        // true|false\n    //icon: 'glass',      // jB.Icon.type|jB.Icon.options\n    //iconAlign: 'right', // left|right\n    click: function() {\n        alert('Hi!')\n    }\n})"
            ],
            "alias": "button",
            "extends": "jB.Component"
        },
        "jB.Collapse": {
            "name": "jB.Collapse",
            "shortname": "jB.Collapse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 3,
            "example": [
                "\nvar btn = jB.Button({\n    text: 'Toggle'\n})\nvar collapse = jB.Collapse({\n    target: btn\n    //,collapsed: true\n    //,offset: 22\n    ,body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n});\n\n[btn, collapse]"
            ],
            "alias": "collapse",
            "extends": "jB.Component"
        },
        "jB.Component": {
            "name": "jB.Component",
            "shortname": "jB.Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 41,
            "description": "Base class for all jB components",
            "example": [
                "\njB.Component({\n    el: '&lt;div&gt;text&lt;/div&gt;',\n    width: 100,\n    height: 100,\n    css: {\n        background: 'red'\n    },\n    click: function() {\n        alert('Hi!')\n    }\n})"
            ],
            "alias": "component",
            "requires": [
                "jB"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "jB.ComponentCollection": {
            "name": "jB.ComponentCollection",
            "shortname": "jB.ComponentCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/ComponentCollection.js",
            "line": 3
        },
        "jB.Form": {
            "name": "jB.Form",
            "shortname": "jB.Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Form.js",
            "line": 2,
            "alias": "form",
            "extends": "jB.AbstractPanel",
            "example": [
                "\njB.Form({\n    items: {\n        xtype: 'fieldset'\n        ,legend: 'Legend'\n        ,body: [\n            {\n                xtype: 'label'\n                ,text: 'Label name'\n            },{\n                xtype: 'textfield'\n                ,placeHolder: 'Type something...'\n            },{\n                el: '&lt;span class=\"help-block\"&gt;Example block-level help text here.&lt;/span&gt;'\n            },{\n                xtype: 'label'\n                ,text: 'Check me out'\n                ,field: {\n                    xtype: 'checkbox'\n                }\n            },{\n                xtype: 'button'\n                ,text: 'Submit'\n            }\n        ]\n    }\n})",
                "\njB.Form({\n    layout: 'search'\n    ,items: [\n        {\n            xtype: 'textfield'\n            ,name: 'email'\n            ,placeHolder: 'Email...'\n            ,search: true\n        },{\n            xtype: 'button'\n            ,text: 'Search'\n        }\n    ]\n})",
                "\njB.Form({\n    layout: 'inline'\n    ,items: [\n        {\n            xtype: 'textfield'\n            ,placeHolder: 'Email'\n            ,size: 'small'\n        },{\n            xtype: 'passwordfield'\n            ,placeHolder: 'Password'\n            ,size: 'small'\n        },{\n            xtype: 'label'\n            ,text: 'Remember me'\n            ,field: {\n                xtype: 'checkbox'\n            }\n        },{\n            xtype: 'button'\n            ,text: 'Submit'\n        }\n    ]\n})",
                "\njB.Form({\n    layout: 'horizontal'\n    ,defaults: {\n        xtype: 'form.controlgroup'\n    }\n    ,items: [\n        {\n            label: 'Email'\n            ,controls: {\n                xtype: 'textfield'\n                ,placeHolder: 'Email'\n            }\n        },{\n            label: 'Password'\n            ,controls: {\n                xtype: 'passwordfield'\n                ,placeHolder: 'Password'\n            }\n        },{\n            controls: [{\n                xtype: 'label'\n                ,text: 'Remember me'\n                ,field: {\n                    xtype: 'checkbox'\n                }\n            },{\n               xtype: 'button'\n               ,text: 'Sign in'\n           }]\n        }\n    ]\n})"
            ]
        },
        "jB.Icon": {
            "name": "jB.Icon",
            "shortname": "jB.Icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Icon.js",
            "line": 2,
            "example": [
                "\njB.Icon({\n    type: 'heart'\n})"
            ],
            "alias": "icon",
            "extends": "jB.Component"
        },
        "jB.Menu": {
            "name": "jB.Menu",
            "shortname": "jB.Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 3,
            "example": [
                "\njB.Menu({\n  css: {\n    display: 'block'\n    ,position: 'static'\n  }\n  //,dropUp: true\n  ,items: [\n    {\n      text: 'Action'\n      ,menu: [\n         {\n             text: 'Second level'\n         },{\n             text: 'Second level'\n         },{\n             text: 'Second level'\n         }\n      ]\n    },{\n      text: 'Another action'\n      ,href: '#'\n    },{\n      text: 'Disabled link'\n      ,href: '#'\n      ,disabled: true\n    },'-',{\n      text: 'Separated link'\n      ,href: '#'\n    }\n  ]\n})"
            ],
            "alias": "menu",
            "extends": "jB.Component"
        },
        "jB.Modal": {
            "name": "jB.Modal",
            "shortname": "jB.Modal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 3,
            "example": [
                "\nvar modal = jB.Modal({\n  title: 'Modal Heading'\n  ,body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas iaculis, tortor in tincidunt aliquam, diam neque rutrum enim, sed hendrerit tortor turpis eget lectus. Nulla a tortor est. Vivamus augue magna, accumsan eget vulputate non, tincidunt sed odio. Curabitur sapien erat, aliquam et lacinia ut, molestie at neque. Vivamus sed nulla nisl. Cras luctus venenatis leo, eu malesuada mauris mattis vel. Proin ultrices porttitor tortor, ac dapibus libero tincidunt sed.'\n  ,footer: 'Modal Footer'\n  ,backdrop: true\n  //,animation: 'fade'\n  ,closable: true\n\n})\n\njB.Button({\n    text: 'Show Modal'\n    ,click: function() {\n        modal.show()\n    }\n})"
            ],
            "alias": "modal",
            "extends": "jB.Popover"
        },
        "jB.Nav": {
            "name": "jB.Nav",
            "shortname": "jB.Nav",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Nav.js",
            "line": 4,
            "example": [
                "\njB.Nav({\n   type: 'tabs'\n   ,items: [\n       {\n           text: 'Item 1'\n           ,activated: true\n       },{\n           text: 'Item 2'\n       },{\n           text: 'Item 3'\n       }\n   ]\n})"
            ],
            "alias": "nav",
            "extends": "jB.Menu"
        },
        "jB.Navbar": {
            "name": "jB.Navbar",
            "shortname": "jB.Navbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 3,
            "example": [
                "\njB.Navbar({\n   brand: 'Title'\n   ,collapsible: true\n   ,items: [\n       {\n           xtype: 'navbar.nav'\n           ,items: [\n               {\n                   text: 'Item 1'\n                   ,menu: [\n                   {\n                       text: 'Item 11'\n                   },{\n                       text: 'Item 12'\n                   }\n               ]\n               },'-',{\n                   text: 'Item 2'\n                   ,href: 'http://google.com'\n               }\n           ]\n       },{\n           xtype: 'form'\n           ,layout: 'navbar-search'\n           ,pullTo: 'right'\n           ,items: {\n               xtype: 'textfield'\n               ,search: true\n               ,size: 'small'\n               ,placeHolder: 'Search...'\n           }\n       }\n   ]\n})"
            ],
            "alias": "navbar",
            "extends": "jB.Component"
        },
        "jB.Popover": {
            "name": "jB.Popover",
            "shortname": "jB.Popover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Popover.js",
            "line": 2,
            "example": [
                "\nvar btn = jB.Button({\n    text: 'Popover'\n})\n\njB.Popover({\n    target: btn\n    ,title: 'Popover'\n    ,body: 'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\n})\n\nbtn"
            ],
            "alias": "popover",
            "extends": "jB.Tooltip"
        },
        "jB.Progress": {
            "name": "jB.Progress",
            "shortname": "jB.Progress",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 2,
            "example": [
                "\n\nvar progress = jB.Progress({\n    percentage: 50\n    ,striped: true\n    ,animated: true\n})\n\nvar btn = jB.Button({\n    text: 'Run'\n    ,togglable: true\n    ,css: {\n        marginBottom: 10\n    }\n    ,on: {\n        toggle: function(e, pressed) {\n            progress[pressed? 'start' : 'stop']()\n        }\n    }\n})\n\n\n;[btn, progress]"
            ],
            "alias": "progress",
            "extends": "jB.Component"
        },
        "jB.Tab": {
            "name": "jB.Tab",
            "shortname": "jB.Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 2,
            "example": [
                "\njB.Tab({\n   appendTo: '#tab'\n   ,items: [\n       {\n           title: 'Item 1'\n           ,body: '<p>Item 1</p>'\n           ,active: true\n       },{\n           title: 'Item 2'\n           ,body: '<p>Item 2</p>'\n       }\n   ]\n})"
            ],
            "alias": "tab",
            "extends": "jB.Component"
        },
        "jB.Tooltip": {
            "name": "jB.Tooltip",
            "shortname": "jB.Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 14,
            "example": [
                "\nvar link = jB.Component({\n    el: '&lt;a href=\"#\"&gt;'\n    ,text: 'Tooltip'\n})\n\njB.Tooltip({\n    target: link\n    ,body: 'Tooltip'\n    //,triggerType: 'click'\n})\n\nlink"
            ],
            "alias": "tooltip",
            "extends": "jB.Component"
        },
        "jB.Tree": {
            "name": "jB.Tree",
            "shortname": "jB.Tree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB/Tree.js",
            "line": 3,
            "example": [
                "\njB.Tree({\n    items: [\n        {\n            text: 'button'\n            ,items: [\n                {\n                    text: 'Group'\n                },{\n                    text: 'Menu'\n                }\n            ]\n        },{\n            text: 'Button'\n        },{\n            text: 'Menu'\n        }\n    ]\n})"
            ],
            "alias": "tree",
            "extends": "jB.Component"
        },
        "jB.jB": {
            "name": "jB.jB",
            "shortname": "jB.jB",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/javascripts/jB/jB.js",
            "line": 13,
            "description": "The jB namespace (global object) encapsulates all classes, singletons, and utility methods provided by jB libraries.",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "String|Element"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "example": [
                "\njB()\njB(function() {\n    return '&lt;div&gt;'\n})\njB({xtype: 'button'})\njB('&lt;div&gt;')\njB('&lt;div&gt;', {cls: 'class-name'})\njB(jQuery)\njB(jQuery, {cls: 'class-name'})\njB({el: '&lt;div&gt;', cls: 'class-name'})"
            ],
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 13,
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean|jB.accordion.Item"
            },
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 31,
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String|jB.accordion.Item"
            },
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 44,
            "itemtype": "method",
            "name": "getTitleCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 60,
            "itemtype": "method",
            "name": "getTitleAnchorCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 80,
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "body",
                    "description": "",
                    "type": "String|Array|Object|jB.Component"
                }
            ],
            "chainable": 1,
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 90,
            "itemtype": "method",
            "name": "bodyCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/accordion/Item.js",
            "line": 106,
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "silent",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "chainable": 1,
            "class": "jB.accordion.Item"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 34,
            "description": "True to make a set of buttons appear vertically stacked rather than horizontally, false otherwise.",
            "itemtype": "attribute",
            "name": "vertical",
            "type": "Boolean",
            "default": "false",
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 43,
            "description": "Get /Set the vertical state.",
            "itemtype": "method",
            "name": "vertical",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 58,
            "description": "Set the button group as checkbox or radio flavors.\nTwo values are allowed:\n<ul>\n    <li><code>radio</code>: only one button may be active.\n    <li><code>checkbox</code>: any number of buttons may be active.\n</ul>",
            "itemtype": "attribute",
            "name": "togglable",
            "type": "String",
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 70,
            "description": "Set the button group as checkbox or radio flavors.",
            "itemtype": "method",
            "name": "toggleable",
            "params": [
                {
                    "name": "type",
                    "description": "Two values are allowed:\n     <ul>\n         <li><code>radio</code>: only one button may be active.\n         <li><code>checkbox</code>: any number of buttons may be active.\n     </ul>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>Boolean: If no argument provide, it returns the current toggle type.\n    <li>jB.button.Group: this\n</ul>",
                "type": "Boolean|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 117,
            "itemtype": "attribute",
            "name": "block",
            "see": [
                "jB.Button.block"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 122,
            "itemtype": "attribute",
            "name": "icon",
            "see": [
                "jB.Button.icon"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 127,
            "itemtype": "attribute",
            "name": "iconAlign",
            "see": [
                "jB.Button.iconAlign"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 132,
            "itemtype": "attribute",
            "name": "size",
            "see": [
                "jB.Button.size"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 137,
            "itemtype": "attribute",
            "name": "text",
            "see": [
                "jB.Button.text"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 142,
            "itemtype": "attribute",
            "name": "type",
            "see": [
                "jB.Button.type"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 147,
            "itemtype": "attribute",
            "name": "disabled",
            "see": [
                "jB.Button.disabled"
            ],
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 152,
            "see": [
                "jB.Button.block"
            ],
            "itemtype": "method",
            "name": "block",
            "return": {
                "description": "",
                "type": "Boolean|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 158,
            "see": [
                "jB.Button.icon"
            ],
            "itemtype": "method",
            "name": "icon",
            "return": {
                "description": "",
                "type": "Boolean|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 165,
            "see": [
                "jB.Button.iconAlign"
            ],
            "itemtype": "method",
            "name": "iconAlign",
            "return": {
                "description": "",
                "type": "String|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 171,
            "see": [
                "jB.Button.size"
            ],
            "itemtype": "method",
            "name": "size",
            "return": {
                "description": "",
                "type": "String|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 178,
            "see": [
                "jB.Button.text"
            ],
            "itemtype": "method",
            "name": "text",
            "return": {
                "description": "",
                "type": "String|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 184,
            "see": [
                "jB.Button.type"
            ],
            "itemtype": "method",
            "name": "type",
            "return": {
                "description": "",
                "type": "String|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Group.js",
            "line": 191,
            "see": [
                "jB.Button.disabled"
            ],
            "itemtype": "method",
            "name": "disabled",
            "return": {
                "description": "",
                "type": "Boolean|jB.button.Group"
            },
            "class": "jB.button.Group"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 39,
            "description": "Get the button handler component",
            "itemtype": "method",
            "name": "buttonCmp",
            "return": {
                "description": "",
                "type": "jB.Button"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 61,
            "description": "The options apply to button handler.\n<ul>\n    <li>String: The button text\n    <li>Object: The button options\n    <li>jB.Button: A instanceof jB.Button\n</ul>",
            "itemtype": "attribute",
            "name": "button",
            "type": "String|Object|jB.Button",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 73,
            "description": "Get / Set the button handler.",
            "itemtype": "method",
            "name": "button",
            "params": [
                {
                    "name": "button",
                    "description": "<ul>\n   <li>String: The button text\n   <li>Object: The button options\n   <li>jB.Button: A instanceof jB.Button\n </ul>",
                    "type": "String|Object|jB.Button",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>jB.Button: If no argument provide, returns the button handler component.\n    <li>jB.button.Menu: this\n</ul>",
                "type": "jB.Button|jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 108,
            "description": "Get the menu component.",
            "itemtype": "method",
            "name": "menuCmp",
            "return": {
                "description": "",
                "type": "jB.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 122,
            "description": "The options apply to the menu of this button menu.\n\n<ul>\n    <li>Object: The plain object as the menu options\n    <li>Array: A list of menu item options of the menu.\n    <li>jB.Menu: A instanceof jB.Menu\n</ul>",
            "itemtype": "attribute",
            "name": "menu",
            "type": "Object|Array|jB.Menu",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 135,
            "description": "Get / Set the menu of this button menu.",
            "itemtype": "method",
            "name": "menu",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object|Array|jB.Menu",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>jB.Menu: If no argument provide, returns the menu component.\n    <li>jB.button.Menu: this\n</ul>",
                "type": "jB.Menu|jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 166,
            "description": "The menu alignment. Two value are allowed: <code>left</code>, <code>right</code>",
            "itemtype": "attribute",
            "name": "menuAlign",
            "type": "String",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 173,
            "description": "Get / Set the menu alignment.",
            "itemtype": "method",
            "name": "menuAlign",
            "params": [
                {
                    "name": "align",
                    "description": "Two value are allowed: <code>left</code>, <code>right</code>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>String: If no argument provide, return the current alignment.\n    <li>jB.button.Menu: this\n</ul>",
                "type": "String|jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 193,
            "description": "True to make the menu toggled from the bottom up, false otherwise.",
            "itemtype": "attribute",
            "name": "dropUp",
            "type": "Boolean",
            "default": "false",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 201,
            "description": "Get / Set the the drop up state.",
            "itemtype": "method",
            "name": "dropUp",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>Boolean: True if drop up is enabled, false otherwise.\n    <li>jB.button.Menu: this\n</ul>",
                "type": "Boolean|jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 220,
            "description": "Show the menu.",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "",
                "type": "jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 230,
            "description": "Hide the menu.",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "",
                "type": "jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 240,
            "description": "Fires before the menu toggle show/hide state.",
            "itemtype": "event",
            "name": "toggle",
            "params": [
                {
                    "name": "state",
                    "description": "True if it is shown, false if it is hidden.",
                    "type": "Boolean"
                }
            ],
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 247,
            "description": "Fires before the menu is shown.",
            "itemtype": "event",
            "name": "show",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 253,
            "description": "Fires before the menu is hidden.",
            "itemtype": "event",
            "name": "hide",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 259,
            "description": "Fires when the menu is toggled show/hide.",
            "itemtype": "event",
            "name": "toggled",
            "params": [
                {
                    "name": "state",
                    "description": "True if it is shown, false if it is hidden.",
                    "type": "Boolean"
                }
            ],
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 266,
            "description": "Fires when the menu is shown.",
            "itemtype": "event",
            "name": "shown",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 273,
            "description": "Fire when the menu is hidden.",
            "itemtype": "event",
            "name": "hidden",
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/Menu.js",
            "line": 279,
            "description": "Toggle show/hide the menu.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.button.Menu"
            },
            "class": "jB.button.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/button/SplitMenu.js",
            "line": 34,
            "description": "Get primary button component",
            "itemtype": "method",
            "name": "primaryButtonCmp",
            "return": {
                "description": "",
                "type": "jB.Button"
            },
            "class": "jB.button.SplitMenu"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/select/OptGroup.js",
            "line": 12,
            "description": "The option group label",
            "itemtype": "attribute",
            "name": "label",
            "type": "String",
            "class": "jB.form.field.select.OptGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/select/OptGroup.js",
            "line": 18,
            "description": "Get / Set the option group label",
            "itemtype": "method",
            "name": "label",
            "params": [
                {
                    "name": "label",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: The option group label\n  <li>jB.form.field.select.OptGroup: this\n</ul>",
                "type": "String|jB.form.field.select.OptGroup"
            },
            "class": "jB.form.field.select.OptGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/select/OptGroup.js",
            "line": 37,
            "description": "The option items of this option group",
            "itemtype": "attribute",
            "name": "items",
            "type": "Array",
            "class": "jB.form.field.select.OptGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/select/OptGroup.js",
            "line": 43,
            "description": "Set option items of this option group",
            "itemtype": "method",
            "name": "items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.form.field.select.OptGroup"
            },
            "class": "jB.form.field.select.OptGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 8,
            "description": "The field name",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 14,
            "description": "Get / Set the field name",
            "itemtype": "method",
            "name": "name",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: The field name\n  <li>jB.form.field.AbstractField: this\n</ul>",
                "type": "String|jB.form.field.AbstractField"
            },
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 28,
            "description": "The field place holder",
            "itemtype": "attribute",
            "name": "placeHolder",
            "type": "String",
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 34,
            "description": "Get / Set the field place holder",
            "itemtype": "method",
            "name": "placeHolder",
            "params": [
                {
                    "name": "placeHolder",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: The field place holder\n  <li>jB.form.field.AbstractField: this\n</ul>",
                "type": "String|jB.form.field.AbstractField"
            },
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 48,
            "description": "The relative sizing of this field. Six values are allowed:\n<code>mini</code>, <code>small</code>, <code>medium</code>,\n<code>large</code>, <code>xlarge</code>, <code>xxlarge</code>",
            "itemtype": "attribute",
            "name": "size",
            "type": "String",
            "example": [
                "\njB.form.field.Text({\n    size: 'large'\n})"
            ],
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 62,
            "description": "Get / Set the relative sizing of this field",
            "itemtype": "method",
            "name": "size",
            "params": [
                {
                    "name": "size",
                    "description": "Six values are allowed:\n                       <code>mini</code>, <code>small</code>, <code>medium</code>,\n                       <code>large</code>, <code>xlarge</code>, <code>xxlarge</code>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current size\n  <li>jB.form.field.AbstractField: this\n</ul>",
                "type": "String|jB.form.field.AbstractField"
            },
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 85,
            "description": "True to make field behave like a block level element",
            "itemtype": "attribute",
            "name": "blockLevel",
            "type": "Boolean",
            "default": "false",
            "example": [
                "\njB.form.field.Text({\n    blockLevel: true\n})"
            ],
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 98,
            "itemtype": "method",
            "name": "blockLevel",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the block level state\n  <li>jB.form.field.AbstractField: this\n</ul>",
                "type": "Boolean|jB.form.field.AbstractField"
            },
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 115,
            "description": "True if this field is required",
            "itemtype": "attribute",
            "name": "required",
            "type": "Boolean",
            "default": "false",
            "example": [
                "\njB.form.field.Text({\n    required: true\n    ,placeHolder: 'Focus me...'\n})"
            ],
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/AbstractField.js",
            "line": 129,
            "description": "Get / Set required state",
            "itemtype": "method",
            "name": "required",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the required state\n  <li>jB.form.field.AbstractField: this\n</ul>",
                "type": "Boolean|jB.form.field.AbstractField"
            },
            "class": "jB.form.field.AbstractField"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Checkbox.js",
            "line": 16,
            "description": "True to render checkbox checked",
            "itemtype": "attribute",
            "name": "checked",
            "type": "Boolean",
            "default": "false",
            "class": "jB.form.field.Checkbox"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Checkbox.js",
            "line": 24,
            "description": "Get / Set checkbox checked state",
            "itemtype": "method",
            "name": "checked",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: Checkbox checked state\n  <li>jB.form.field.Checkbox: this\n</ul>",
                "type": "Boolean|jB.form.field.Checkbox"
            },
            "class": "jB.form.field.Checkbox"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Select.js",
            "line": 55,
            "description": "True to show multiple option at once",
            "itemtype": "attribute",
            "name": "multiple",
            "type": "Boolean",
            "default": "false",
            "class": "jB.form.field.Select"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Select.js",
            "line": 63,
            "description": "Get / Set multiple option state",
            "itemtype": "method",
            "name": "multiple",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the multiple options state\n  <li>jB.form.field.Select: this\n</ul>",
                "type": "Boolean|jB.form.field.Select"
            },
            "class": "jB.form.field.Select"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Select.js",
            "line": 82,
            "description": "The option/option-group items of this option group",
            "itemtype": "attribute",
            "name": "items",
            "type": "Array",
            "class": "jB.form.field.Select"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Select.js",
            "line": 88,
            "description": "Set option/option-group items of this option group",
            "itemtype": "method",
            "name": "items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Object|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.form.field.Select"
            },
            "class": "jB.form.field.Select"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Text.js",
            "line": 18,
            "description": "True to apply search query style.",
            "itemtype": "attribute",
            "name": "search",
            "type": "Boolean",
            "default": "false",
            "class": "jB.form.field.Text"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Text.js",
            "line": 26,
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the search style state\n  <li>jB.form.field.Select: this\n</ul>",
                "type": "Boolean|jB.form.field.Select"
            },
            "class": "jB.form.field.Text"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/TextArea.js",
            "line": 17,
            "description": "Specifies the visible height of a text area, in lines",
            "itemtype": "attribute",
            "name": "rows",
            "type": "Number",
            "default": "2",
            "class": "jB.form.field.TextArea"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/TextArea.js",
            "line": 25,
            "description": "Get / Set the 'rows' attribute of this textarea",
            "itemtype": "method",
            "name": "rows",
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Number: The 'rows' attribute value\n  <li>jB.form.field.TextArea: this\n</ul>",
                "type": "Number|jB.form.field.TextArea"
            },
            "class": "jB.form.field.TextArea"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Uneditable.js",
            "line": 17,
            "description": "The value (text) of this field",
            "itemtype": "attribute",
            "name": "val",
            "type": "String",
            "class": "jB.form.field.Uneditable"
        },
        {
            "file": "source/javascripts/jB/jB/form/field/Uneditable.js",
            "line": 24,
            "itemtype": "method",
            "name": "val",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: The text value of this field\n  <li>jB.form.field.Uneditable: this\n</ul>",
                "type": "String|jB.form.field.Uneditable"
            },
            "class": "jB.form.field.Uneditable"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 20,
            "description": "The control group label\n\n<ul>\n  <li>String: The label text\n  <li>Object: The options apply to this label\n</ul>",
            "itemtype": "attribute",
            "name": "label",
            "type": "String|Object",
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 31,
            "description": "Get / Set the label of this control group",
            "itemtype": "method",
            "name": "label",
            "params": [
                {
                    "name": "label",
                    "description": "<ul>\n                         <li>String: The label text\n                         <li>Object: The options apply to this label\n                       </ul>",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.form.Label: If no argument provide, returns the label component instance\n  <li>jB.form.ControlGroup: this\n</ul>",
                "type": "jB.form.Label|jB.form.ControlGroup"
            },
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 58,
            "description": "Get the label component instance",
            "itemtype": "method",
            "name": "labelCmp",
            "return": {
                "description": "",
                "type": "jB.form.Label"
            },
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 75,
            "description": "The controls options or items of this control group\n\n<ul>\n  <li>Object: The options apply to this control component\n  <li>Array: List of control items\n</ul>",
            "itemtype": "attribute",
            "name": "controls",
            "type": "Object|Array",
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 86,
            "itemtype": "method",
            "name": "controls",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n                              <li>Object: The options apply to this control component\n                              <li>Array: List of control items\n                            </ul>",
                    "type": "Object|Array"
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.form.Controls: If no argument provide, return the controls component instance\n  <li>jB.form.ControlGroup: this\n</ul>",
                "type": "jB.form.Controls|jB.form.ControlGroup"
            },
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 111,
            "description": "Get the control component instance",
            "itemtype": "method",
            "name": "controlCmp",
            "return": {
                "description": "",
                "type": "jB.form.Controls"
            },
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 126,
            "description": "The control group validation states. Four values are allowed:\n<code>error</code>, <code>warning</code>, <code>info</code>, and <code>success</code>",
            "itemtype": "attribute",
            "name": "validationState",
            "type": "String",
            "example": [
                "\njB.Form({\n    layout: 'horizontal'\n    ,defaults: {\n        xtype: 'form.controlgroup'\n        ,controls: {\n            items: {\n                xtype: 'textfield'\n            }\n        }\n    }\n    ,items: [\n        {\n            label: 'Input with warning'\n            ,validationState: 'warning'\n            ,controls: {\n                help: 'Something may have gone wrong'\n            }\n        },{\n            label: 'Input with error'\n            ,validationState: 'error'\n            ,controls: {\n                help: 'Please correct the error'\n            }\n        },{\n            label: 'Input with info'\n            ,validationState: 'info'\n            ,controls: {\n                help: 'Username is taken'\n            }\n        },{\n            label: 'Input with success'\n            ,validationState: 'success'\n            ,controls: {\n                help: 'Woohoo!'\n            }\n        }\n    ]\n})"
            ],
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/ControlGroup.js",
            "line": 174,
            "description": "Get / Set validation state",
            "itemtype": "method",
            "name": "validationState",
            "params": [
                {
                    "name": "state",
                    "description": "Four values are allowed:\n                        <code>error</code>, <code>warning</code>, <code>info</code>, and <code>success</code>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current validation state\n  <li>jB.form.ControlGroup: this\n</ul>",
                "type": "String|jB.form.ControlGroup"
            },
            "class": "jB.form.ControlGroup"
        },
        {
            "file": "source/javascripts/jB/jB/form/Controls.js",
            "line": 11,
            "description": "The help text\n<ul>\n  <li>String: The help text/html\n  <li>Object: The option apply to this help component\n</ul>",
            "itemtype": "attribute",
            "name": "help",
            "type": "String|Object",
            "class": "jB.form.Controls"
        },
        {
            "file": "source/javascripts/jB/jB/form/Controls.js",
            "line": 21,
            "itemtype": "method",
            "name": "help",
            "params": [
                {
                    "name": "option",
                    "description": "<ul>\n                                  <li>String: The help text/html\n                                  <li>Object: The option apply to this help component\n                                </ul>",
                    "type": "String|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.form.HelpText: If no argument provide, returns the help component\n  <li>jB.form.Controls: this\n</ul>",
                "type": "jB.form.HelpText|jB.form.Controls"
            },
            "class": "jB.form.Controls"
        },
        {
            "file": "source/javascripts/jB/jB/form/FieldContainer.js",
            "line": 139,
            "description": "True to append text, button to input field",
            "itemtype": "attribute",
            "name": "addOnAppend",
            "type": "Boolean",
            "default": "false",
            "class": "jB.form.FieldContainer"
        },
        {
            "file": "source/javascripts/jB/jB/form/FieldContainer.js",
            "line": 147,
            "description": "Get / Set append add on state",
            "itemtype": "method",
            "name": "addOnAppend",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the add on append state\n  <li>jB.form.FieldContainer: this\n</ul>",
                "type": "Boolean|jB.form.FieldContainer"
            },
            "class": "jB.form.FieldContainer"
        },
        {
            "file": "source/javascripts/jB/jB/form/FieldContainer.js",
            "line": 166,
            "description": "True to append text, button to input field",
            "itemtype": "attribute",
            "name": "addOnPrepend",
            "type": "Boolean",
            "default": "false",
            "class": "jB.form.FieldContainer"
        },
        {
            "file": "source/javascripts/jB/jB/form/FieldContainer.js",
            "line": 174,
            "description": "Get / Set prepend state",
            "itemtype": "method",
            "name": "addOnPrepend",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the add on prepend state\n  <li>jB.form.FieldContainer: this\n</ul>",
                "type": "Boolean|jB.form.FieldContainer"
            },
            "class": "jB.form.FieldContainer"
        },
        {
            "file": "source/javascripts/jB/jB/form/FieldSet.js",
            "line": 26,
            "description": "The legend of this fieldset\n<ul>\n  <li>String: The legend text\n  <li>Object: The options apply to the legend component\n</ul>",
            "itemtype": "attribute",
            "name": "legend",
            "type": "String|Object",
            "class": "jB.form.FieldSet"
        },
        {
            "file": "source/javascripts/jB/jB/form/FieldSet.js",
            "line": 36,
            "description": "Get / Set the legend of this fieldset",
            "itemtype": "method",
            "name": "legend",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n                                   <li>String: The legend text\n                                   <li>Object: The options apply to the legend component\n                                 </ul>",
                    "type": "String|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.Component: The legend component instance\n  <li>jB.form.FieldSet: this\n</ul>",
                "type": "jB.Component|jB.form.FieldSet"
            },
            "class": "jB.form.FieldSet"
        },
        {
            "file": "source/javascripts/jB/jB/form/HelpText.js",
            "line": 12,
            "description": "The help layout. Two values are allowed: <code>inline</code>, <code>block</code>",
            "itemtype": "attribute",
            "name": "",
            "default": "'inline'",
            "class": "jB.form.HelpText"
        },
        {
            "file": "source/javascripts/jB/jB/form/HelpText.js",
            "line": 18,
            "description": "Get / Set the layout",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "layout",
                    "description": "Two values are allowed: <code>inline</code>, <code>block</code>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, return the current layout\n  <li>jB.form.HelpText: this\n</ul>",
                "type": "String|jB.form.HelpText"
            },
            "class": "jB.form.HelpText"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 19,
            "description": "The label text/options\n<ul>\n  <li>String: The label text\n  <li>Object: The options apply to this text component\n</ul>",
            "itemtype": "attribute",
            "name": "text",
            "type": "String|Object",
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 29,
            "description": "Get / Set the text component of this label",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n                                   <li>String: The label text\n                                   <li>Object: The options apply to this text component\n                                 </ul>",
                    "type": "String|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component|jB.form.Label"
            },
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 51,
            "description": "Get text component instance",
            "itemtype": "method",
            "name": "textCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 66,
            "description": "The 'for' attribute of this label\n<ul>\n  <li>String: The id of the element the label is bound to\n  <li>jB.form.field.AbstractField: The field the label is bound to\n</ul>",
            "itemtype": "attribute",
            "name": "for",
            "type": "String|jB.form.field.AbstractField",
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 76,
            "description": "Get / Set the 'for' attribute of this label",
            "itemtype": "method",
            "name": "for",
            "params": [
                {
                    "name": "field",
                    "description": "<ul>\n                                                <li>String: The id of the element the label is bound to\n                                                <li>jB.form.field.AbstractField: The field the label is bound to\n                                              </ul>",
                    "type": "String|jB.form.field.AbstractField",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: The 'for' attribute value\n  <li>jB.form.Label: this\n</ul>",
                "type": "String|jB.form.Label"
            },
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 106,
            "description": "The child field of this label\n<ul>\n  <li>Object: The options apply to the field\n  <li>jB.form.field.AbstractField: A instanceof jB.form.field.AbstractField\n</ul>",
            "itemtype": "attribute",
            "name": "field",
            "type": "Object|jB.form.field.AbstractField",
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 117,
            "description": "The child field of this label",
            "itemtype": "method",
            "name": "field",
            "params": [
                {
                    "name": "field",
                    "description": "<ul>\n                                                <li>Object: The options apply to the field\n                                                <li>jB.form.field.AbstractField: A instanceof jB.form.field.AbstractField\n                                              </ul>",
                    "type": "Object|jB.form.field.AbstractField",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.form.field.AbstractField: The field component instance\n  <li>jB.form.Label: this\n</ul>",
                "type": "jB.form.field.AbstractField|jB.form.Label"
            },
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 157,
            "description": "True to appear controls on the same line",
            "itemtype": "attribute",
            "name": "inline",
            "type": "Boolean",
            "default": "false",
            "example": [
                "\njB.Component({\n    defaults: {\n        xtype: 'label'\n        ,inline: true\n        ,field: {\n            xtype: 'checkbox'\n        }\n    }\n    ,items: [\n        {\n            text: '1'\n            ,field: {\n                val: 'option1'\n            }\n        },{\n            text: '2'\n            ,field: {\n                val: 'option1'\n            }\n        },{\n            text: '3'\n            ,field: {\n                val: 'option1'\n            }\n        }\n    ]\n})"
            ],
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/form/Label.js",
            "line": 193,
            "description": "Get / Set the inline state",
            "itemtype": "method",
            "name": "inline",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the inline state\n  <li>jB.form.Label: this\n</ul>",
                "type": "Boolean|jB.form.Label"
            },
            "class": "jB.form.Label"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 25,
            "description": "True to disable this component, false otherwise.",
            "itemtype": "attribute",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 33,
            "description": "Get disable state or enable / disable this component.",
            "itemtype": "method",
            "name": "disabled",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>Boolean: If no argument provide, return the disable state.\n    <li>jB.menu.AbstractItem: this\n</ul>",
                "type": "Boolean|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 55,
            "description": "True to active this component, false otherwise.",
            "itemtype": "attribute",
            "name": "activated",
            "type": "Boolean",
            "default": "false",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 63,
            "description": "Get active state or activate / deactivate this component.",
            "itemtype": "method",
            "name": "activated",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>Boolean: If no argument provide, return the active state.\n    <li>jB.menu.AbstractItem: this\n</ul>",
                "type": "Boolean|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 82,
            "description": "Whether to not to hide the owning menu when this item is clicked.",
            "itemtype": "attribute",
            "name": "hideOnClick",
            "type": "Boolean",
            "default": "false",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 90,
            "description": "Whether to not to hide the owning menu when this item is clicked.",
            "itemtype": "method",
            "name": "hideOnClick",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>Boolean: If no argument provide, return the hideOnClick state.\n    <li>jB.menu.AbstractItem: this\n</ul>",
                "type": "Boolean|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 110,
            "description": "Get inner component.",
            "itemtype": "method",
            "name": "innerCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 148,
            "description": "Get text component.",
            "itemtype": "method",
            "name": "textCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 163,
            "description": "The menu item icon.\n<ul>\n  <li>String: Type of the Icon\n  <li>Object: The options apply to this Icon\n  <li>jB.Icon: A instanceof jB.Icon\n</ul>",
            "itemtype": "attribute",
            "name": "icon",
            "type": "String|Object|jB.Icon",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 174,
            "description": "Get / Set icon for this Button.",
            "itemtype": "method",
            "name": "icon",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n    <li>String: Type of the Icon\n    <li>Object: The options apply to this Icon\n  </ul>",
                    "type": "String|Object|jB.Icon",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Icon|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 203,
            "description": "The menu item icon alignment.",
            "itemtype": "attribute",
            "name": "iconAlign",
            "type": "String",
            "default": "'left'",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 211,
            "description": "Change the Icon alignment. Two values are allowed: <code>left</code> <code>right</code>",
            "itemtype": "method",
            "name": "iconAlign",
            "params": [
                {
                    "name": "align",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 228,
            "description": "Get the icon component.",
            "itemtype": "method",
            "name": "iconCmp",
            "return": {
                "description": "",
                "type": "jB.Icon"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 243,
            "description": "Get the menu component.",
            "itemtype": "method",
            "name": "menuCmp",
            "return": {
                "description": "",
                "type": "jB.Menu"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 258,
            "description": "The menu item text",
            "itemtype": "attribute",
            "name": "text",
            "type": "String",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 265,
            "description": "Set the menu item text or get the menu item text component.",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>jB.Component: If no argument provide, return the menu item text component.\n    <li>jB.menu.AbstractItem: this\n</ul>",
                "type": "jB.Component|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 285,
            "description": "The sub menu of this menu item.\n<ul>\n    <li>Object: The options apply to this menu.\n    <li>Array: List of item apply to this menu.\n    <li>jB.Menu: A instanceof jB.Menu\n</ul>",
            "itemtype": "attribute",
            "name": "menu",
            "type": "Object|Array|jB.Menu",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 298,
            "description": "Get / Set the sub menu of this menu item.",
            "itemtype": "method",
            "name": "menu",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n                                         <li>Object: The options apply to this menu.\n                                         <li>Array: List of item apply to this menu.\n                                         <li>jB.Menu: A instanceof jB.Menu\n                                      </ul>",
                    "type": "Object|Array|jB.Menu"
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>jB.Menu: The menu instance of this menu item.\n    <li>jB.menu.AbstractItem: this\n</ul>",
                "type": "jB.Menu|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 335,
            "description": "The sub menu alignment. Two value are allowed: <code>left</code>, <code>right</code>",
            "itemtype": "attribute",
            "name": "menuAlign",
            "type": "String",
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 342,
            "description": "Get / Set the sub menu alignment.",
            "itemtype": "method",
            "name": "menuAlign",
            "params": [
                {
                    "name": "align",
                    "description": "Two value are allowed: <code>left</code>, <code>right</code>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>String: If no argument provide, return the current alignment.\n    <li>jB.menu.AbstractItem: this\n</ul>",
                "type": "String|jB.menu.AbstractItem"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/AbstractItem.js",
            "line": 366,
            "description": "Get the parent menu.",
            "itemtype": "method",
            "name": "parentMenu",
            "return": {
                "description": "",
                "type": "jB.Menu"
            },
            "class": "jB.menu.AbstractItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 40,
            "description": "True to render the menu item initially checked.",
            "itemtype": "attribute",
            "name": "checked",
            "type": "Boolean",
            "default": "false",
            "class": "jB.menu.CheckItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 48,
            "description": "Get checked state or toggle checked state.",
            "itemtype": "method",
            "name": "checked",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>Boolean: Checked state\n    <li>jB.menu.CheckItem: this\n</ul>",
                "type": "Boolean|jB.menu.CheckItem"
            },
            "class": "jB.menu.CheckItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 67,
            "description": "The checkbox value.",
            "itemtype": "attribute",
            "name": "checkValue",
            "type": "String",
            "class": "jB.menu.CheckItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 74,
            "description": "Get / Set the checkbox value.",
            "itemtype": "method",
            "name": "checkValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>String: The checkbox value\n    <li>jB.menu.CheckItem: this\n</ul>",
                "type": "String|jB.menu.CheckItem"
            },
            "class": "jB.menu.CheckItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 93,
            "description": "Get the inner component.",
            "itemtype": "method",
            "name": "innerCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.menu.CheckItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/CheckItem.js",
            "line": 118,
            "description": "Get checkbox component.",
            "itemtype": "method",
            "name": "getCheckboxCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.menu.CheckItem"
        },
        {
            "file": "source/javascripts/jB/jB/menu/Item.js",
            "line": 12,
            "description": "The href attribute to use for the underlying anchor link.",
            "itemtype": "attribute",
            "name": "href",
            "type": "String",
            "default": "'#'",
            "class": "jB.menu.Item"
        },
        {
            "file": "source/javascripts/jB/jB/menu/Item.js",
            "line": 19,
            "description": "Get / Set t\nhe href attribute to use for the underlying anchor link.",
            "itemtype": "method",
            "name": "href",
            "params": [
                {
                    "name": "href",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>String: The anchor link\n    <li>jB.menu.Item: this\n</ul>",
                "type": "String|jB.menu.Item"
            },
            "class": "jB.menu.Item"
        },
        {
            "file": "source/javascripts/jB/jB/navbar/nav/Item.js",
            "line": 10,
            "description": "The navigation item dropdown menu\n<ul>\n    <li>Object: The options apply to dropdown menu\n    <li>Array: The dropdown menu items\n    <li>jB.Menu: A instanceof jB.Menu\n</ul>",
            "itemtype": "attribute",
            "name": "menu",
            "type": "Object|Array|jB.Menu",
            "class": "jB.navbar.nav.Item"
        },
        {
            "file": "source/javascripts/jB/jB/navbar/nav/Item.js",
            "line": 22,
            "see": [
                "jB.menu.AbstractItem.menu"
            ],
            "itemtype": "method",
            "name": "menu",
            "class": "jB.navbar.nav.Item"
        },
        {
            "file": "source/javascripts/jB/jB/tab/Item.js",
            "line": 20,
            "description": "Get nav component.",
            "itemtype": "method",
            "name": "navCmp",
            "return": {
                "description": "",
                "type": "jB.nav.Item"
            },
            "class": "jB.tab.Item"
        },
        {
            "file": "source/javascripts/jB/jB/tab/Item.js",
            "line": 41,
            "description": "Get body component.",
            "itemtype": "method",
            "name": "bodyCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.tab.Item"
        },
        {
            "file": "source/javascripts/jB/jB/tab/Item.js",
            "line": 59,
            "description": "Activate this tab item.",
            "itemtype": "method",
            "name": "active",
            "return": {
                "description": "",
                "type": "jB.tab.Item"
            },
            "class": "jB.tab.Item"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 12,
            "description": "The panel header",
            "itemtype": "attribute",
            "name": "header",
            "type": "Object|jB.Component",
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 19,
            "description": "Get the panel header Component or Set the panel header",
            "itemtype": "method",
            "name": "header",
            "params": [
                {
                    "name": "header",
                    "description": "<ul>\n                                         <li>Object: The options apply to the header component.\n                                         <li>jB.Component: A instanceof jB.Component\n                                      </ul>",
                    "type": "Object|jB.Component",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>jB.Component: the header component\n     <li>jB.AbstractPanel: this\n </ul>",
                "type": "jB.Component|jB.AbstractPanel"
            },
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 42,
            "description": "Get the panel header component.",
            "itemtype": "method",
            "name": "headerCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 57,
            "description": "The panel body",
            "itemtype": "attribute",
            "name": "body",
            "type": "Object|jB.Component",
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 64,
            "description": "Get the panel body Component or Set the panel body",
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "body",
                    "description": "<ul>\n                                        <li>Object: The options apply to the body component.\n                                        <li>jB.Component: A instanceof jB.Component\n                                    </ul>",
                    "type": "Object|jB.Component",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>jB.Component : the header component\n     <li>jB.AbstractPanel: this\n </ul>",
                "type": "jB.Component|jB.AbstractPanel"
            },
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 87,
            "description": "Get the panel body component",
            "itemtype": "method",
            "name": "bodyCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 105,
            "description": "The panel footer",
            "itemtype": "attribute",
            "name": "footer",
            "type": "Object|jB.Component",
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 112,
            "description": "Get the panel footer Component Set the panel footer",
            "itemtype": "method",
            "name": "footer",
            "params": [
                {
                    "name": "footer",
                    "description": "<ul>\n                                        <li>Object: The options apply to the body component.\n                                        <li>jB.Component: A instanceof jB.Component\n                                      </ul>",
                    "type": "Object|jB.Component",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>jB.Component: the footer component\n     <li>jB.AbstractPanel: this\n </ul>",
                "type": "jB.Component|jB.AbstractPanel"
            },
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/AbstractPanel.js",
            "line": 135,
            "description": "Get the panel footer component.",
            "itemtype": "method",
            "name": "footerCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.AbstractPanel"
        },
        {
            "file": "source/javascripts/jB/jB/Accordion.js",
            "line": 38,
            "description": "True to enable multiple accordion items to be open at once.",
            "itemtype": "attribute",
            "name": "multiple",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Accordion"
        },
        {
            "file": "source/javascripts/jB/jB/Accordion.js",
            "line": 46,
            "description": "Enable/disable multiple accordion items to be open at once.",
            "example": [
                "\njB.Accordion({\n    multiple: true\n    ,items: [\n        {\n            title: 'Item 1'\n            ,body: 'Item 1 body'\n        },{\n            title: 'Item 2'\n            ,body: 'Item 2 body'\n        }\n    ]\n})"
            ],
            "itemtype": "method",
            "name": "multiple",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: The multiple state.\n  <li>jB.Accordion: this\n</ul>",
                "type": "Boolean|jB.Accordion"
            },
            "class": "jB.Accordion"
        },
        {
            "file": "source/javascripts/jB/jB/Accordion.js",
            "line": 87,
            "description": "Enable / Disable the accordion collapse animation",
            "itemtype": "attribute",
            "name": "animation",
            "type": "Boolean",
            "default": "true",
            "class": "jB.Accordion"
        },
        {
            "file": "source/javascripts/jB/jB/Accordion.js",
            "line": 95,
            "description": "Get / Set the accordion animation state",
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: The animation state\n  <li>jB.Accordion: this\n</ul>",
                "type": "Boolean|jB.Accordion"
            },
            "class": "jB.Accordion"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 48,
            "description": "The alert title.",
            "itemtype": "attribute",
            "name": "title",
            "type": "String",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 54,
            "description": "Get / set alert title.",
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>jB.Component: If no argument provide, returns the Alert title component\n    <li>jB.Alert: this\n</ul>",
                "type": "jB.Component|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 79,
            "description": "The alert animation type",
            "itemtype": "attribute",
            "name": "animation",
            "type": "String|Object",
            "default": "'slide'",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 87,
            "description": "Get / set / disable animation when show, hide or close the Alert",
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "type",
                    "description": "Four values are allowed: <code>hide</code> <code>slide</code> <code>true</code>.\n                               <code>false</code> to disable animation affect.",
                    "type": "Boolean|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>Boolean: If no argument provide, returns the animation state\n     <li>String: If no argument provide, returns the animation type\n     <li>jB.Alert: this Alert\n </ul>",
                "type": "Boolean|String|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 109,
            "description": "The action to take when close the alert",
            "itemtype": "attribute",
            "name": "closeAction",
            "type": "String",
            "default": "'hide'",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 116,
            "description": "Get / Set the action to take when the close button is clicked",
            "itemtype": "method",
            "name": "closeAction",
            "params": [
                {
                    "name": "action",
                    "description": "Two values are allowed:\n                         <ul>\n                             <li><a href=\"#\">hide<a/> : The Alery will be available to be redisplayed via the show method.\n                             <li>\n                                 <a href=\"\">remove</a> : Remove the Alert from the DOM and destroy it and all descendant Components.\n                                 The Alert will not be available to be redisplayed via the show method.\n                             </li>\n                         </ul>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: The current close action type.\n  <li>jB.Alert: this\n</ul>",
                "type": "String|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 143,
            "description": "Enable / Disable the close button",
            "itemtype": "attribute",
            "name": "closable",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 151,
            "description": "Enable / Disable the 'close' button and allow the user to close the Alert.",
            "itemtype": "method",
            "name": "closable",
            "params": [
                {
                    "name": "state",
                    "description": "false to hide the 'close' button.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>Boolean: The closable state\n     <li>jB.Alert: this\n </ul>",
                "type": "Boolean|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 194,
            "description": "The alert type",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "default": "warning",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 202,
            "description": "Get / Set the Alert type.",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "type",
                    "description": "Five values are allowed:\n       <code>info</code> <code>warning</code> <code>success</code> <code>error</code> <code>danger</code>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>String: The Alert type\n     <li>jB.Alert: this\n </ul>",
                "type": "String|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 226,
            "description": "True to increase hte padding on the top and bottom of the alert wrapper.",
            "itemtype": "attribute",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 234,
            "description": "Enable / Disable increase the padding on the top and bottom of the alert wrapper.",
            "itemtype": "method",
            "name": "block",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n <ul>\n     <li>Boolean: The block state\n     <li>jB.Alert: this\n </ul>",
                "type": "Boolean|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 255,
            "description": "True to hide the alert when rendered.",
            "itemtype": "attribute",
            "name": "hidden",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 263,
            "description": "Get / Set the alert hidden state",
            "itemtype": "method",
            "name": "hidden",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: The hidden state.\n  <li>jB.Alert: this\n</ul>",
                "type": "Boolean|jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 282,
            "description": "Fires before the alert is shown",
            "itemtype": "event",
            "name": "show",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.Event"
                }
            ],
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 289,
            "description": "Fires before the alert is hidden",
            "itemtype": "event",
            "name": "hide",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.Event"
                }
            ],
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 296,
            "description": "Fires when the alert is shown",
            "itemtype": "event",
            "name": "shown",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.Event"
                }
            ],
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 303,
            "description": "Fires when the alert is hidden",
            "itemtype": "event",
            "name": "hidden",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.Event"
                }
            ],
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 310,
            "description": "Toggle show / hide the alert",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 351,
            "description": "Show this Alert.",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "",
                "type": "jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 361,
            "description": "Hide the Alert.",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "",
                "type": "jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 370,
            "description": "Fires before the alert is close",
            "itemtype": "event",
            "name": "close",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 375,
            "description": "Fires when the alert is closed",
            "itemtype": "event",
            "name": "closed",
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Alert.js",
            "line": 380,
            "description": "Close the Alert.\nBy default, this method removes it from the DOM, destroys the Alert object and all its descendant Components.\nThe <a href=\"#\">close</a> event is triggered.<br>\n<em><b>Note</b>: This method is also affected by the <a href=\"#\">closeAction</a> setting</em>",
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "",
                "type": "jB.Alert"
            },
            "class": "jB.Alert"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 26,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$el",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 32,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$cls",
            "default": "'btn'",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 39,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$iconAlign",
            "default": "'left'",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 46,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$togglable",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 54,
            "description": "The button type.\nSeven values are allowed:\n<code>primary</code> <code>info</code> <code>success</code> <code>warning</code> <code>danger</code>\n<code>inverse</code> <code>link</code>",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 64,
            "description": "Set the Button type.\nSeven values are allowed:\n<code>primary</code> <code>info</code> <code>success</code> <code>warning</code> <code>danger</code>\n<code>inverse</code> <code>link</code>",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current button type.\n  <li>jB.Button: this\n</ul>",
                "type": "String|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 95,
            "description": "The button text",
            "itemtype": "attribute",
            "name": "text",
            "type": "String",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 102,
            "description": "Set the button text or get the button text component",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n    <li>jB.Component: If no argument provide, return the menu item text component.\n    <li>jB.Button: this\n</ul>",
                "type": "jB.Component|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 121,
            "description": "Get the button text component.",
            "itemtype": "method",
            "name": "textCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 137,
            "description": "The button size.\nThree values are allowed: <code>mini</code> <code>small</code> <code>large</code>",
            "itemtype": "attribute",
            "name": "size",
            "type": "String",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 145,
            "description": "Set the Button size. Three values are allowed: <code>mini</code> <code>small</code> <code>large</code>",
            "itemtype": "method",
            "name": "size",
            "params": [
                {
                    "name": "size",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current button size.\n  <li>jB.Button: this\n</ul>",
                "type": "String|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 173,
            "description": "True to render this button pressed.",
            "itemtype": "attribute",
            "name": "pressed",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 181,
            "description": "Toggle the Button pressed state.",
            "itemtype": "method",
            "name": "pressed",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the pressed state.\n  <li>jB.Button: this\n</ul>",
                "type": "Boolean|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 200,
            "description": "Enable / Disable togglable mode.",
            "itemtype": "attribute",
            "name": "togglable",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 208,
            "description": "Switch the Button to togglable mode.",
            "itemtype": "method",
            "name": "togglable",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns togglable state.\n  <li>jB.Button: this\n</ul>",
                "type": "Boolean|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 239,
            "description": "Enable / Disable block mode.",
            "itemtype": "attribute",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 247,
            "description": "Switch mode of span the Button to the full with of it parent.",
            "itemtype": "method",
            "name": "block",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns block mode state.\n  <li>jB.Button: this\n</ul>",
                "type": "Boolean|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 266,
            "description": "The button icon.\n<ul>\n  <li>String: Type of the Icon\n  <li>Object: The options apply to this Icon\n  <li>jB.Icon: A instanceof jB.Icon\n</ul>",
            "itemtype": "attribute",
            "name": "icon",
            "type": "String|Object|jB.Icon",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 279,
            "description": "Get / Set icon for this Button.",
            "itemtype": "method",
            "name": "icon",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n    <li>String: Type of the Icon\n    <li>Object: The options apply to this Icon\n    <li>jB.Icon: A instanceof jB.Icon\n  </ul>",
                    "type": "String|Object|jB.Icon",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.Icon: If no argument provide, returns the Icon component instance.\n  <li>jB.Button: this\n</ul>",
                "type": "jB.Icon|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 319,
            "description": "Get the button icon component.",
            "itemtype": "method",
            "name": "iconCmp",
            "return": {
                "description": "",
                "type": "jB.Icon"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 335,
            "description": "The button icon alignment.",
            "itemtype": "attribute",
            "name": "iconAlign",
            "type": "String",
            "default": "'left'",
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 343,
            "description": "Change the Icon alignment. Two values are allowed: <code>left</code> <code>right</code>",
            "itemtype": "method",
            "name": "iconAlign",
            "params": [
                {
                    "name": "align",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the icon alignment type.\n  <li>jB.Button: this\n</ul>",
                "type": "String|jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 367,
            "description": "Toggle or set the pressed state of this Button.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "state",
                    "description": "If a state it passed, it becomes the pressed state otherwise the current state is toggled.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Button"
            },
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 375,
            "description": "Fires before the 'pressed' state of this button changes.",
            "itemtype": "event",
            "name": "toggle",
            "params": [
                {
                    "name": "pressed",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Button.js",
            "line": 382,
            "description": "Fires when the 'pressed' state of this button changed.",
            "itemtype": "event",
            "name": "toggled",
            "params": [
                {
                    "name": "pressed",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "jB.Button"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 22,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$bodyEl",
            "type": "String",
            "default": "''",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 30,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$collapsed",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 38,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$offset",
            "type": "Number",
            "default": "0",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 46,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$animation",
            "type": "Boolean",
            "default": "true",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 61,
            "description": "The collapse body.",
            "itemtype": "attribute",
            "name": "body",
            "type": "String|Object|Array",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 68,
            "description": "The collapse body.",
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "body",
                    "description": "",
                    "type": "String|Object|Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.Component: If no argument provide, returns the body component instance.\n  <li>jB.Collapse: this\n</ul>",
                "type": "jB.Component|jB.Collapse"
            },
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 89,
            "description": "Get the collapse body component.",
            "itemtype": "method",
            "name": "bodyCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 104,
            "description": "The collapse target handler.",
            "itemtype": "attribute",
            "name": "target",
            "type": "String|Element|jQuery|jB.Component",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 111,
            "description": "Get/Set the collapse target handler.",
            "itemtype": "method",
            "name": "target",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "String|jQuery|jB.Component",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jQuery|jB.Component"
            },
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 138,
            "description": "The collapse offset.",
            "itemtype": "attribute",
            "name": "offset",
            "type": "Number",
            "default": "0",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 146,
            "description": "Get/Set the collapse offset.",
            "itemtype": "method",
            "name": "offset",
            "params": [
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>If no argument provide, returns the current offset number.\n  <li>jB.Collapse: this\n</ul>",
                "type": "Number|jB.Collapse"
            },
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 169,
            "description": "Enable / Disable the collapse animation affect.",
            "itemtype": "attribute",
            "name": "animation",
            "type": "Boolean",
            "default": "true",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 177,
            "description": "Get / Set the collapse animation state.",
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the animation state.\n  <li>jB.Collapse: this\n</ul>",
                "type": "Boolean|jB.Collapse"
            },
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 197,
            "description": "True to render collapse collapsed.",
            "itemtype": "attribute",
            "name": "collapsed",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 218,
            "description": "Toggle the collapsed state.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Collapse"
            },
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 264,
            "description": "Fires before 'collapsed' state is changed.",
            "itemtype": "event",
            "name": "toggle",
            "params": [
                {
                    "name": "collapsed",
                    "description": "The collapsed state",
                    "type": "Boolean"
                }
            ],
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 270,
            "description": "Fires before the collapse is expanded.",
            "itemtype": "event",
            "name": "expand",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 275,
            "description": "Fires before the collapse is collapsed.",
            "itemtype": "event",
            "name": "collapse",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 280,
            "description": "Fires when 'collapsed' state is changed.",
            "itemtype": "event",
            "name": "toggled",
            "params": [
                {
                    "name": "collapsed",
                    "description": "The collapsed state.",
                    "type": "Boolean"
                }
            ],
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 286,
            "description": "Fires when the collapse is expanded.",
            "itemtype": "event",
            "name": "expanded",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Collapse.js",
            "line": 291,
            "description": "Fires when the collapse is collapsed.",
            "itemtype": "event",
            "name": "collapsed",
            "class": "jB.Collapse"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 24,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$el",
            "type": "String",
            "default": "\"div\"",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 32,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$cls",
            "default": "\"\"",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 76,
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "onRender",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 85,
            "description": "Apply a set of setters to this Component",
            "itemtype": "method",
            "name": "options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 102,
            "description": "The component id attribute",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 109,
            "description": "Get / Set the component id attribute",
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String|jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 119,
            "description": "The target element that this component will be rendered into.",
            "itemtype": "attribute",
            "name": "renderTo",
            "type": "jQuerySelector|jB.Component",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 126,
            "description": "Set the target element this component will be rendered into.\nSimilar to jQuery.replaceAll",
            "itemtype": "method",
            "name": "renderTo",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "jQuerySelector|jB.Component"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 139,
            "description": "The dom class attribute option of this Component",
            "itemtype": "attribute",
            "name": "cls",
            "type": "String",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 146,
            "description": "Add the dom class attribute option of this Component",
            "itemtype": "method",
            "name": "cls",
            "params": [
                {
                    "name": "cls",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String|jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 169,
            "description": "Adds one or more CSS classes to this element and removes the same class(es) from all siblings.",
            "itemtype": "method",
            "name": "radioClass",
            "params": [
                {
                    "name": "cls",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 182,
            "description": "Fires before the component is disabled.",
            "itemtype": "event",
            "name": "disable",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.Event"
                }
            ],
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 189,
            "description": "Fires before the component is enabled.",
            "itemtype": "event",
            "name": "enable",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.event"
                }
            ],
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 196,
            "description": "Fires when the component is disabled.",
            "itemtype": "event",
            "name": "disabled",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.Event"
                }
            ],
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 203,
            "description": "Fires when the component is enabled.",
            "itemtype": "event",
            "name": "enabled",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "jQuery.event"
                }
            ],
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 210,
            "description": "Enable / Disable this component.",
            "itemtype": "attribute",
            "name": "disabled",
            "type": "Boolean",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 217,
            "description": "Toggle disable state of this component.",
            "itemtype": "method",
            "name": "disabled",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean|jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 249,
            "description": "Change this component to enabled",
            "itemtype": "method",
            "name": "enable",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 259,
            "description": "Change this component to disabled",
            "itemtype": "method",
            "name": "disable",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 269,
            "description": "Applying the default options to all added children component.",
            "itemtype": "attribute",
            "name": "defaults",
            "type": "Object",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 276,
            "description": "Set / Get the default option(s) apply to all added children component.",
            "itemtype": "method",
            "name": "defaults",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String|Object"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 297,
            "description": "The child component(s) to be added to this component.",
            "itemtype": "attribute",
            "name": "items",
            "type": "String|jQuery|Object|Array|jB.Component|jB.ComponentCollection",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 304,
            "description": "Set the child component(s) of this component.",
            "itemtype": "method",
            "name": "items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "String|jQuery|Object|Array|jB.Component|jB.ComponentCollection"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 315,
            "description": "Floated this component to left or right",
            "itemtype": "attribute",
            "name": "pullTo",
            "type": "String",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 322,
            "description": "Floated this component to left or right",
            "itemtype": "method",
            "name": "pullTo",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 339,
            "description": "The grid column size. Twelve values (from 1 to 12) are allowed",
            "itemtype": "attribute",
            "name": "span",
            "type": "Number",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 346,
            "description": "Get / Set the grid column size of this component",
            "itemtype": "method",
            "name": "span",
            "params": [
                {
                    "name": "span",
                    "description": "Twelve values (from 1 to 12) are allowed",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Number: If no argument provide, returns the current grid column size\n  <li>jB.Component: this\n</ul>",
                "type": "Number|jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 368,
            "description": "Add affix behavior to this component.",
            "itemtype": "attribute",
            "name": "affix",
            "type": "Boolean|Object",
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Component.js",
            "line": 374,
            "description": "Add affix behavior to this component.",
            "itemtype": "method",
            "name": "affix",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Boolean|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Component"
        },
        {
            "file": "source/javascripts/jB/jB/Form.js",
            "line": 112,
            "description": "The form layout. Four values are allowed:\n<code>search</code>, <code>inline</code>, <code>horizontal</code>, <code>vertical</code>",
            "itemtype": "attribute",
            "name": "layout",
            "type": "String",
            "class": "jB.Form"
        },
        {
            "file": "source/javascripts/jB/jB/Form.js",
            "line": 120,
            "description": "The form layout. Four values are allowed:\n<code>search</code>, <code>inline</code>, <code>horizontal</code>, <code>vertical</code>",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "layout",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current layout.\n  <li>jB.Form: this\n</ul>",
                "type": "String|jB.Form"
            },
            "class": "jB.Form"
        },
        {
            "file": "source/javascripts/jB/jB/Icon.js",
            "line": 14,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$el",
            "type": "String",
            "class": "jB.Icon"
        },
        {
            "file": "source/javascripts/jB/jB/Icon.js",
            "line": 21,
            "description": "The icon type.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "class": "jB.Icon"
        },
        {
            "file": "source/javascripts/jB/jB/Icon.js",
            "line": 29,
            "description": "Get / Set the icon type.",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, return the current icon type.\n  <li>jB.Icon: this\n</ul>",
                "type": "String|jB.Icon"
            },
            "class": "jB.Icon"
        },
        {
            "file": "source/javascripts/jB/jB/Icon.js",
            "line": 51,
            "description": "Enable / Disable inverted (white) icons.",
            "itemtype": "attribute",
            "name": "white",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Icon"
        },
        {
            "file": "source/javascripts/jB/jB/Icon.js",
            "line": 59,
            "description": "Enable / Disable inverted (white) icons.",
            "itemtype": "method",
            "name": "white",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, return the inverse state.\n  <li>jB.Icon: this\n</ul>",
                "type": "Boolean|jB.Icon"
            },
            "class": "jB.Icon"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 42,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$el",
            "type": "String",
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 49,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$cls",
            "type": "String",
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 56,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$defaultItemType",
            "type": "String",
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 63,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "$dividerXtype",
            "type": "String",
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 70,
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "Object|Array|jB.Component"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Menu"
            },
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 94,
            "description": "Enable / Disable the menu drop up behaviors.",
            "itemtype": "attribute",
            "name": "dropUp",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Menu.js",
            "line": 102,
            "description": "Get / Set the menu drop up behaviors.",
            "itemtype": "method",
            "name": "dropUp",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, return the drop up state.\n  <li>jB.Menu: this\n</ul>",
                "type": "Boolean|jB.Menu"
            },
            "class": "jB.Menu"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 54,
            "description": "The modal title",
            "itemtype": "attribute",
            "name": "title",
            "type": "String|Object|jB.Component",
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 60,
            "description": "Get / Set the modal title",
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "<ul>\n                                              <li>String: The title text/html apply to modal title.\n                                              <li>Object: The options apply to modal title.\n                                              <li>jB.Component: A instance of jB.Component append to modal title.\n                                            </ul>",
                    "type": "String|Object|jB.Component",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.Component: If no argument provide, return the title component instance.\n  <li>jB.Modal: this\n</ul>",
                "type": "jB.Component|jB.Modal"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 84,
            "description": "Get the modal title component.",
            "itemtype": "method",
            "name": "titleCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 99,
            "description": "Enable / Disable the modal close button.",
            "itemtype": "attribute",
            "name": "closable",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 107,
            "description": "Enable / Disable the modal close button.",
            "itemtype": "method",
            "name": "closable",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, return the closable state.\n  <li>jB.Modal: this\n</ul>",
                "type": "Boolean|jB.Modal"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 122,
            "description": "Get the modal close button.",
            "itemtype": "method",
            "name": "getCloseCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 143,
            "description": "Enable / Disable the modal-backdrop element.",
            "itemtype": "attribute",
            "name": "backdrop",
            "type": "Boolean",
            "default": "true",
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 151,
            "description": "Enable / Disable the modal-backdrop element.",
            "itemtype": "method",
            "name": "backdrop",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.Component: If no argument provide, return the modal-backdrop state\n  <li>jB.Modal: this\n</ul>",
                "type": "Boolean|jB.Modal"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 171,
            "description": "Get the modal backdrop component.",
            "itemtype": "method",
            "name": "backdropCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 202,
            "description": "The action to take when the close button is clicked.",
            "itemtype": "attribute",
            "name": "closeAction",
            "type": "String",
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 209,
            "description": "Get / Set the action to take when the close button is clicked.",
            "itemtype": "method",
            "name": "closeAction",
            "params": [
                {
                    "name": "action",
                    "description": "Two values are allowed: <code>hide</code> <code>remove</code>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, return the close action type.\n  <li>jB.Modal: this\n</ul>",
                "type": "String|jB.Modal"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 229,
            "description": "Close the modal",
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "",
                "type": "jB.Modal"
            },
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Modal.js",
            "line": 243,
            "see": [
                "jB.Component.remove"
            ],
            "itemtype": "method",
            "name": "remove",
            "class": "jB.Modal"
        },
        {
            "file": "source/javascripts/jB/jB/Nav.js",
            "line": 28,
            "description": "The nav type.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "class": "jB.Nav"
        },
        {
            "file": "source/javascripts/jB/jB/Nav.js",
            "line": 35,
            "description": "Get / Set the nav type.",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, return the current nav type.\n  <li>jB.Nav: this\n</ul>",
                "type": "String|jB.Nav"
            },
            "class": "jB.Nav"
        },
        {
            "file": "source/javascripts/jB/jB/Nav.js",
            "line": 54,
            "description": "Enable / Disabled stacked mode",
            "itemtype": "attribute",
            "name": "stacked",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Nav"
        },
        {
            "file": "source/javascripts/jB/jB/Nav.js",
            "line": 62,
            "description": "Get / Set stacked mode",
            "itemtype": "method",
            "name": "stacked",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, return the stacked state.\n  <li>jB.Nav: this\n</ul>",
                "type": "Boolean|jB.Nav"
            },
            "class": "jB.Nav"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 47,
            "description": "Get inner component.",
            "itemtype": "method",
            "name": "innerCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 62,
            "description": "Get container component.",
            "itemtype": "method",
            "name": "containerCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 76,
            "description": "Get brand component.",
            "itemtype": "method",
            "name": "brandCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 91,
            "description": "The brand of this navbar.\n<ul>\n  <li>String: The text/html apply to brand component.\n  <li>Object: The options apply to brand component.\n</ul>",
            "itemtype": "attribute",
            "name": "brand",
            "type": "String|Object",
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 101,
            "itemtype": "method",
            "name": "brand",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n                                 <li>String: The text/html apply to brand component.\n                                 <li>Object: The options apply to brand component.\n                               </ul>",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>jB.Component: If no argument provide, returns the branch component instance.\\\n  <li>jB.Navbar: this\n</ul>",
                "type": "jB.Component|jB.Navbar"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 126,
            "see": [
                "jB.Component.items"
            ],
            "itemtype": "method",
            "name": "items",
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 134,
            "description": "The nav component append to this Navbar.\n<ul>\n  <li>Object: The options apply to this nav\n  <li>Array: List items apply to this nav\n  <li>jB.Nav: A instanceof jB.Nav\n</ul>",
            "itemtype": "attribute",
            "name": "nav",
            "type": "Object|Array|jB.Nav",
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 145,
            "itemtype": "method",
            "name": "nav",
            "params": [
                {
                    "name": "options",
                    "description": "<ul>\n                                       <li>Object: The options apply to this nav\n                                       <li>Array: List items apply to this nav\n                                       <li>jB.Nav: A instanceof jB.Nav\n                                     </ul>",
                    "type": "Object|Array|jB.Nav"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Navbar"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 166,
            "description": "True to inverse the navbar style.",
            "itemtype": "attribute",
            "name": "inverse",
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 171,
            "description": "Get the inverse state or enable/disable inverse state.",
            "itemtype": "method",
            "name": "inverse",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns he inverse state.\n  <li>jB.Navbar: this\n</ul>",
                "type": "Boolean|jB.Navbar"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 190,
            "description": "Fix the navbar to the top or bottom of the viewport.\nTwo values are allowed: <code>top</code>, <code>bottom</code>",
            "itemtype": "attribute",
            "name": "fixed",
            "type": "String",
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Navbar.js",
            "line": 197,
            "description": "Fix the navbar to the top or bottom of the viewport.",
            "itemtype": "method",
            "name": "fixed",
            "params": [
                {
                    "name": "type",
                    "description": "Two values are allowed: <code>top</code> <code>bottom</code>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "\n<ul>\n <li>String: If no argument provide, returns the fixed position.\n <li>jB.Navbar: this\n</ul>",
                "type": "String|jB.Navbar"
            },
            "class": "jB.Navbar"
        },
        {
            "file": "source/javascripts/jB/jB/Popover.js",
            "line": 29,
            "description": "The popover title\n<ul>\n  <li>String: The text/html apply to popover title\n  <li>Object: The options apply to popover title\n  <li>jB.Component: A instance of jB.Component\n</ul>",
            "itemtype": "attribute",
            "name": "title",
            "type": "String|Object|jB.Component",
            "class": "jB.Popover"
        },
        {
            "file": "source/javascripts/jB/jB/Popover.js",
            "line": 40,
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "<ul>\n                        <li>String: The text/html apply to popover title\n                        <li>Object: The options apply to popover title\n                        <li>jB.Component: A instance of jB.Component\n                       </ul>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Popover"
            },
            "class": "jB.Popover"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 35,
            "description": "Get progress bar component.",
            "itemtype": "method",
            "name": "getBarCmp",
            "return": {
                "description": "",
                "type": "jB.Component"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 53,
            "description": "The % width of this progress bar.",
            "itemtype": "attribute",
            "name": "percentage",
            "type": "Number",
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 61,
            "description": "Get / Set the % width of this progress bar.",
            "itemtype": "method",
            "name": "percentage",
            "params": [
                {
                    "name": "percentage",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Number: If no argument provide, returns the % width of the progress bar.\n  <li>jB.Progress: this\n</ul>",
                "type": "Number|jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 82,
            "description": "Enable / Disable striped affect.",
            "itemtype": "attribute",
            "name": "striped",
            "type": "Boolean",
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 89,
            "description": "Enable / Disable striped affect.",
            "itemtype": "method",
            "name": "striped",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the striped state.\n  <li>jB.Progress: this\n</ul>",
                "type": "Boolean|jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 108,
            "description": "True to start enable animate the stripes right to left.",
            "itemtype": "attribute",
            "name": "animated",
            "type": "Boolean",
            "default": "false",
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 116,
            "description": "Start / Stop animate the stripes\n.",
            "itemtype": "method",
            "name": "animated",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the animated state.\n  <li>jB.Progress: this\n</ul>",
                "type": "Boolean|jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 136,
            "description": "The progress style.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "default": "'primary'",
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 144,
            "description": "Get / Set the progress styles.",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the progress type.\n  <li>jB.Progress: this\n</ul>",
                "type": "String|jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 170,
            "description": "The length of time in seconds that the progress bar should run to end (100%).",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "5",
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 178,
            "description": "Get / Set the length of time in seconds that the progress bar should run to end (100%).",
            "itemtype": "method",
            "name": "duration",
            "params": [
                {
                    "name": "seconds",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the duration number.\n  <li>jB.Progress: this\n</ul>",
                "type": "Number|jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 198,
            "description": "Start running progress.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Progress.js",
            "line": 227,
            "description": "Stop progress.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Progress"
            },
            "class": "jB.Progress"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 24,
            "description": "Get the nav component.",
            "itemtype": "method",
            "name": "navCmp",
            "return": {
                "description": "",
                "type": "jB.Nav"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 41,
            "description": "Get the body component.",
            "itemtype": "method",
            "name": "bodyCmp",
            "return": {
                "description": "",
                "type": "jB.tab.Content"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 55,
            "description": "The items of this Tab.\n<ul>\n  <li>Object: A single item options\n  <li>Array: List of items of this Tab\n</ul>",
            "itemtype": "attribute",
            "name": "items",
            "type": "Object|Array",
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 66,
            "itemtype": "method",
            "name": "items",
            "params": [
                {
                    "name": "items",
                    "description": "<ul>\n                              <li>Object: A single item options\n                              <li>Array: List of items of this Tab\n                            </ul>",
                    "type": "Object|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Tab"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 88,
            "description": "Get a item of this Tab",
            "itemtype": "method",
            "name": "item",
            "params": [
                {
                    "name": "at",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "jB.tab.Item"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 99,
            "description": "True to enable pills style.",
            "itemtype": "attribute",
            "name": "",
            "default": "false",
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 105,
            "description": "Enable / Disable pills style.",
            "itemtype": "method",
            "name": "pills",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, return the current pills style state.\n  <li>jB.Tab: this\n</ul>",
                "type": "Boolean|jB.Tab"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 125,
            "see": [
                "jB.Nav.stacked"
            ],
            "itemtype": "attribute",
            "name": "stacked",
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 130,
            "itemtype": "method",
            "name": "stacked",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, return the stacked state.\n  <li>jB.Tab: this\n</ul>",
                "type": "Boolean|jB.Tab"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 147,
            "description": "The tabs direction.\n<ul>\n  <li>left: Put tabs on the left\n  <li>below: Put tabs on the bottom\n  <li>top: Put tabs on the top\n</ul>",
            "itemtype": "attribute",
            "name": "direction",
            "type": "String",
            "default": "'top'",
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tab.js",
            "line": 159,
            "description": "Get / Set tabs direction.",
            "itemtype": "method",
            "name": "direction",
            "params": [
                {
                    "name": "direction",
                    "description": "<ul>\n                              <li>left: Put tabs on the left\n                              <li>below: Put tabs on the bottom\n                              <li>top: Put tabs on the top\n                            </ul>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current direction.\n  <li>jB.Tab: this\n</ul>",
                "type": "String|jB.Tab"
            },
            "class": "jB.Tab"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 54,
            "description": "The action to take on target to show/hide the tooltip",
            "itemtype": "attribute",
            "name": "triggerType",
            "type": "String",
            "default": "'hover'",
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 62,
            "description": "Get / Set the trigger type",
            "itemtype": "method",
            "name": "triggerType",
            "return": {
                "description": "\n<ul>\n  <li>String: The current trigger type\n  <li>jB.Tooltip: this\n</ul>",
                "type": "String|jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 82,
            "description": "The target of tooltip.\n<ul>\n  <li>jQuerySelector: A valid jquery selector or jQuery object.\n  <li>jB.Component: A jB.Component instance\n</ul>",
            "itemtype": "attribute",
            "name": "target",
            "type": "{jQuerySelector|jB.Component}",
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 93,
            "description": "Get / Set the tooltip target",
            "itemtype": "method",
            "name": "target",
            "params": [
                {
                    "name": "target",
                    "description": "<ul>\n                                                <li>jQuerySelector: A valid jquery selector or jQuery object.\n                                                <li>jB.Component: A jB.Component instance\n                                              </ul>",
                    "type": "jQuerySelector|jB.Component",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jQueryObject|jB.Component"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 118,
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "refreshTriggerAction",
            "return": {
                "description": "",
                "type": "jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 163,
            "description": "How to position the tooltip. Four values are allowed:\n<code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>",
            "itemtype": "attribute",
            "name": "placement",
            "type": "String",
            "default": "'top'",
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 171,
            "itemtype": "method",
            "name": "placement",
            "params": [
                {
                    "name": "placement",
                    "description": "Four values are allowed:\n                            <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current alignment\n  <li>jB.Tooltip: this\n</ul>",
                "type": "String|jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 190,
            "description": "The animation type. Two value are allowed: <code>slide</code>, <code>fade</code>",
            "itemtype": "attribute",
            "name": "animation",
            "type": "Boolean|String",
            "default": "'fade'",
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 198,
            "description": "Get / Set the animation type.",
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "animation",
                    "description": "Two value are allowed: <code>slide</code>, <code>fade</code>",
                    "type": "Boolean|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>String: If no argument provide, returns the current animation type\n  <li>jB.Tooltip: this\n</ul>",
                "type": "String|jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 217,
            "description": "Show the tooltip.",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "",
                "type": "jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 227,
            "description": "Hide the tooltip.",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "",
                "type": "jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 237,
            "description": "True to hide the tooltip.",
            "itemtype": "attribute",
            "name": "hidden",
            "type": "Boolean",
            "default": "true",
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 245,
            "description": "Get / Set the hidden state.",
            "itemtype": "method",
            "name": "hidden",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "\n<ul>\n  <li>Boolean: If no argument provide, returns the hidden state\n  <li>jB.Tooltip: this\n</ul>",
                "type": "Boolean|jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 268,
            "description": "Toggle show/hide state.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tooltip.js",
            "line": 335,
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "updatePosition",
            "return": {
                "description": "",
                "type": "jB.Tooltip"
            },
            "class": "jB.Tooltip"
        },
        {
            "file": "source/javascripts/jB/jB/Tree.js",
            "line": 50,
            "description": "True if it a root tree.",
            "itemtype": "method",
            "name": "isRoot",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "jB.Tree"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 80,
            "static": 1,
            "itemtype": "method",
            "name": "noConflict",
            "return": {
                "description": "",
                "type": "JB"
            },
            "class": "jB.jB"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 91,
            "description": "Library version",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "readonly": "",
            "default": "\"1.0\"",
            "class": "jB.jB"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 100,
            "description": "The jQuery object reference",
            "itemtype": "property",
            "name": "$",
            "type": "Object",
            "readonly": "",
            "default": "jQuery",
            "class": "jB.jB"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 117,
            "itemtype": "property",
            "name": "alias",
            "type": "Object",
            "readonly": "",
            "class": "jB.jB"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 133,
            "description": "Generate the unique id",
            "itemtype": "method",
            "name": "uniq",
            "params": [
                {
                    "name": "prefix",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "jB.jB"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 150,
            "itemtype": "method",
            "name": "namespace",
            "params": [
                {
                    "name": "parts",
                    "description": "",
                    "type": "String|Array"
                },
                {
                    "name": "ref",
                    "description": "",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "jB.jB"
        },
        {
            "file": "source/javascripts/jB/jB.js",
            "line": 183,
            "description": "Define a Class",
            "itemtype": "method",
            "name": "def",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Class"
            },
            "class": "jB.jB"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/accordion/item/Body.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/accordion/Item.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/button/Group.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/button/Menu.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/button/SplitMenu.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/select/OptGroup.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/select/Option.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/Checkbox.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/Password.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/Radio.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/Select.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/Text.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/TextArea.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/field/Uneditable.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/AddOn.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/ControlGroup.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/Controls.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/FieldContainer.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/FieldSet.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/HelpText.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/form/Label.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/menu/CheckItem.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/menu/Divider.js:4"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/menu/Item.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/nav/Item.js:4"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/navbar/nav/Item.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/navbar/Container.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/navbar/Divider.js:1"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/navbar/Nav.js:1"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/tab/Content.js:2"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Accordion.js:4"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Alert.js:18"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Button.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Collapse.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Component.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Form.js:2"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Icon.js:2"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Menu.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Modal.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Nav.js:4"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Navbar.js:3"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Popover.js:2"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Progress.js:2"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Tab.js:2"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Tooltip.js:14"
        },
        {
            "message": "unknown tag: alias",
            "line": " source/javascripts/jB/jB/Tree.js:3"
        }
    ]
}